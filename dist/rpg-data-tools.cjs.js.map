{"version":3,"file":"rpg-data-tools.cjs.js","sources":["../src/constructData/mainData.ts","../src/constructData/map.ts","../src/constructData/audio/createAudio.ts","../src/constructData/systemData.ts","../src/eventCommand/commandMapper/commandGroup/pickCommands/commandCheck.ts","../src/eventCommand/commandMapper/commandGroup/pickCommands/errors/errorConstants.ts","../src/eventCommand/commandMapper/commandGroup/pickCommands/pickCommands.ts","../src/eventCommand/commandMapper/commandGroup/pickCommands/commandComment.ts","../src/eventCommand/commandMapper/commandGroup/pickCommands/commandScript.ts","../src/eventCommand/commandMapper/commandGroup/pickCommands/commandMessage.ts","../src/eventCommand/commandMapper/commandGroup/pickCommands/commandScrollText.ts","../src/eventCommand/commandMapper/commandGroup/class/join.ts","../src/eventCommand/commandMapper/commandGroup/class/commandGroop.ts","../src/eventCommand/commandMapper/commandGroup/class/commentUtils.ts","../src/eventCommand/commandMapper/commandGroup/class/createGroup.ts","../src/eventCommand/commandMapper/commandGroup/handleGroupGommnads.ts","../src/eventCommand/commandMapper/text.ts","../src/eventCommand/commandMapper/allMapping.ts","../src/eventCommand/commandMapper/groupMerge.ts","../src/eventCommand/rpg/map/eventProcessor.ts","../src/eventCommand/rpg/replaceCommands.ts","../src/eventCommand/normalize.ts","../src/eventCommand/utils/matches/matchesEventCommand.ts","../src/eventCommand/utils/pickParam/pickCommandParam.ts","../src/eventCommand/createCommand.ts","../src/format/note/note.ts","../src/format/codeInfoText.ts","../src/format/controlChars/constants.ts","../src/format/controlChars/controlChars.ts","../src/format/controlChars/getContolChars.ts","../src/utils/dataPicker/pickPropety.ts","../src/labels/battlerParam/battlerParam.ts","../src/labels/battlerParam/makeOptions.ts"],"sourcesContent":["import type {\r\n  Data_Actor,\r\n  Data_Enemy,\r\n  Data_Weapon,\r\n  Data_Armor,\r\n  Data_Class,\r\n  Data_Skill,\r\n  Data_Item,\r\n  Data_State,\r\n  ParamArray,\r\n} from \"@sigureya/rpgtypes\";\r\n\r\nexport const constructParamArray = (): ParamArray => {\r\n  return [0, 0, 0, 0, 0, 0, 0, 0];\r\n};\r\n\r\nexport const constructActor = (proto?: Partial<Data_Actor>): Data_Actor => {\r\n  return {\r\n    id: 0,\r\n    name: \"\",\r\n    nickname: \"\",\r\n    profile: \"\",\r\n    note: \"\",\r\n    classId: 0,\r\n    initialLevel: 1,\r\n    maxLevel: 99,\r\n    characterIndex: 0,\r\n    characterName: \"\",\r\n    faceIndex: 0,\r\n    faceName: \"\",\r\n    battlerName: \"\",\r\n    traits: [],\r\n    equips: [],\r\n    ...proto,\r\n  };\r\n};\r\n\r\nexport const constructEnemy = (proto?: Partial<Data_Enemy>): Data_Enemy => {\r\n  return {\r\n    battlerHue: 0,\r\n    id: 0,\r\n    name: \"\",\r\n    note: \"\",\r\n    battlerName: \"\",\r\n    traits: [],\r\n    params: constructParamArray(),\r\n    exp: 0,\r\n    gold: 0,\r\n    dropItems: [],\r\n    actions: [],\r\n\r\n    ...proto,\r\n  };\r\n};\r\n\r\nexport const constructArmor = (proto?: Partial<Data_Armor>): Data_Armor => {\r\n  return {\r\n    price: 0,\r\n    id: 0,\r\n    name: \"\",\r\n    note: \"\",\r\n    iconIndex: 0,\r\n    description: \"\",\r\n    etypeId: 0,\r\n    params: constructParamArray(),\r\n    traits: [],\r\n\r\n    ...proto,\r\n  };\r\n};\r\nexport const constructWeapon = (proto?: Partial<Data_Weapon>): Data_Weapon => {\r\n  return {\r\n    price: 0,\r\n    id: 0,\r\n    name: \"\",\r\n    note: \"\",\r\n    iconIndex: 0,\r\n    description: \"\",\r\n    etypeId: 0,\r\n    wtypeId: 0,\r\n    params: constructParamArray(),\r\n    traits: [],\r\n    damage: constructDamage(),\r\n\r\n    ...proto,\r\n  };\r\n};\r\n\r\nexport const constructClass = (proto?: Partial<Data_Class>): Data_Class => {\r\n  return {\r\n    id: 0,\r\n    name: \"\",\r\n    note: \"\",\r\n    traits: [],\r\n    learnings: [],\r\n    params: constructParamArray(),\r\n    expParams: [],\r\n    ...proto,\r\n  };\r\n};\r\n\r\nexport const constructDamage = (\r\n  proto?: Partial<Data_Skill[\"damage\"]>\r\n): Data_Skill[\"damage\"] => {\r\n  return {\r\n    type: 0,\r\n    elementId: 0,\r\n    formula: \"0\",\r\n    variance: 20,\r\n    critical: false,\r\n    ...proto,\r\n  };\r\n};\r\n\r\nexport const constructItem = (proto?: Partial<Data_Item>): Data_Item => {\r\n  return {\r\n    id: 0,\r\n    name: \"\",\r\n    iconIndex: 0,\r\n    description: \"\",\r\n    note: \"\",\r\n    price: 0,\r\n    consumable: false,\r\n    scope: 0,\r\n    occasion: 0,\r\n    speed: 0,\r\n    successRate: 100,\r\n    repeats: 1,\r\n    tpGain: 0,\r\n    hitType: 0,\r\n    animationId: 0,\r\n    damage: constructDamage(),\r\n    effects: [],\r\n    ...proto,\r\n  };\r\n};\r\n\r\nexport const constructSkill = (proto?: Partial<Data_Skill>): Data_Skill => {\r\n  return {\r\n    animationId: 0,\r\n    damage: constructDamage(),\r\n    description: \"\",\r\n    hitType: 0,\r\n    iconIndex: 0,\r\n    id: 0,\r\n    message1: \"\",\r\n    message2: \"\",\r\n    mpCost: 0,\r\n    name: \"\",\r\n    note: \"\",\r\n    occasion: 0,\r\n    repeats: 1,\r\n    requiredWtypeId1: 0,\r\n    requiredWtypeId2: 0,\r\n    scope: 0,\r\n    speed: 0,\r\n    stypeId: 0,\r\n    successRate: 100,\r\n    tpCost: 0,\r\n    tpGain: 0,\r\n    effects: [],\r\n    messageType: 0,\r\n\r\n    ...proto,\r\n  };\r\n};\r\n\r\nexport const constructState = (proto?: Partial<Data_State>): Data_State => {\r\n  return {\r\n    id: 0,\r\n    name: \"\",\r\n    iconIndex: 0,\r\n    restriction: 0,\r\n    priority: 50,\r\n    motion: 0,\r\n    overlay: 0,\r\n    removeAtBattleEnd: false,\r\n    removeByRestriction: false,\r\n    autoRemovalTiming: 0,\r\n    minTurns: 1,\r\n    maxTurns: 1,\r\n    removeByDamage: false,\r\n    chanceByDamage: 100,\r\n    removeByWalking: false,\r\n    stepsToRemove: 100,\r\n    message1: \"\",\r\n    message2: \"\",\r\n    message3: \"\",\r\n    message4: \"\",\r\n    traits: [],\r\n    note: \"\",\r\n    ...proto,\r\n  };\r\n};\r\n","import type { Data_Map, MapEvent } from \"@sigureya/rpgtypes\";\r\nimport type { MapEventPage } from \"@sigureya/rpgtypes\";\r\n\r\nexport const createMap = (\r\n  proto: {\r\n    bgm: Data_Map[\"bgm\"];\r\n    bgs: Data_Map[\"bgs\"];\r\n  } & Partial<Data_Map>\r\n): Data_Map => ({\r\n  autoplayBgm: true,\r\n  autoplayBgs: false,\r\n  battleback1Name: \"\",\r\n  battleback2Name: \"\",\r\n  data: [],\r\n  disableDashing: false,\r\n  displayName: \"\",\r\n  encounterList: [],\r\n  events: [],\r\n  height: 0,\r\n  note: \"\",\r\n  width: 0,\r\n  x: 0,\r\n  y: 0,\r\n  parallaxName: \"\",\r\n  parallaxLoopX: false,\r\n  parallaxLoopY: false,\r\n  parallaxShow: false,\r\n  parallaxSx: 0,\r\n  parallaxSy: 0,\r\n  ...proto,\r\n});\r\n\r\nexport const createMapEvent = (arg?: Partial<MapEvent>): MapEvent => ({\r\n  id: 0,\r\n  name: \"\",\r\n  note: \"\",\r\n  x: 0,\r\n  y: 0,\r\n  pages: [createEventPage()],\r\n  ...arg,\r\n});\r\n\r\nexport const createCondtion = (\r\n  arg?: Partial<MapEventPage[\"conditions\"]>\r\n): MapEventPage[\"conditions\"] => ({\r\n  actorId: 0,\r\n  actorValid: false,\r\n  itemId: 0,\r\n  itemValid: false,\r\n  selfSwitchCh: \"\",\r\n  selfSwitchValid: false,\r\n  switch1Id: 0,\r\n  switch1Valid: false,\r\n  switch2Id: 0,\r\n  switch2Valid: false,\r\n  variableId: 0,\r\n  variableValid: false,\r\n  variableValue: 0,\r\n  ...arg,\r\n});\r\n\r\nexport const createMapEventImage = (\r\n  arg?: Partial<MapEventPage[\"image\"]>\r\n): MapEventPage[\"image\"] => ({\r\n  characterIndex: 0,\r\n  characterName: \"\",\r\n  direction: 6,\r\n  pattern: 0,\r\n  tileId: 0,\r\n  ...arg,\r\n});\r\n\r\nexport const createEventPage = (arg?: Partial<MapEventPage>): MapEventPage => ({\r\n  conditions: createCondtion(),\r\n  image: createMapEventImage(),\r\n  moveRoute: {\r\n    list: [],\r\n    repeat: false,\r\n    wait: false,\r\n    skippable: false,\r\n  },\r\n  directionFix: false,\r\n  moveFrequency: 0,\r\n  list: [],\r\n  ...arg,\r\n});\r\n","import type {\r\n  AudioFileParams,\r\n  ExtractCommandByParam,\r\n} from \"@sigureya/rpgtypes\";\r\n\r\nexport const createAudio = (\r\n  audio: Partial<AudioFileParams> = {}\r\n): AudioFileParams => {\r\n  return {\r\n    name: audio.name ?? \"\",\r\n    volume: audio.volume ?? 90,\r\n    pitch: audio.pitch ?? 100,\r\n    pan: audio.pan ?? 0,\r\n  };\r\n};\r\n\r\nexport const createAudioCommand = <\r\n  Code extends ExtractCommandByParam<[AudioFileParams]>[\"code\"]\r\n>(\r\n  code: Code,\r\n  name: string,\r\n  indent = 0\r\n) => {\r\n  return {\r\n    code,\r\n    parameters: [createAudio({ name })] as [AudioFileParams],\r\n    indent,\r\n  };\r\n};\r\n","import type {\r\n  Data_System,\r\n  Terms_Messages,\r\n  System_Terms,\r\n  System_Advanced,\r\n  Data_Vehicle,\r\n  Terms_BasicArray,\r\n  Terms_ParamNamesArray,\r\n  Terms_CommandArray,\r\n  System_SoundsArray,\r\n} from \"@sigureya/rpgtypes\";\r\nimport type { SystemSounds } from \"./audio\";\r\nimport { createAudio } from \"./audio\";\r\nimport type { ParamTable } from \"./paramArray\";\r\nimport type { Terms_Commands, BasicTerms } from \"./types\";\r\n\r\nexport const createSystemData = (\r\n  system: Partial<Data_System> = {}\r\n): Data_System => ({\r\n  local: system.local ?? \"\",\r\n  gameTitle: system.gameTitle ?? \"\",\r\n  currencyUnit: system.currencyUnit ?? \"\",\r\n  title1Name: system.title1Name ?? \"\",\r\n  terms: system.terms ?? createTerms(),\r\n  title2Name: system.title2Name ?? \"\",\r\n  optAutosave: system.optAutosave ?? false,\r\n  attackMotions: system.attackMotions ?? [],\r\n  startMapId: system.startMapId ?? 0,\r\n  startX: system.startX ?? 0,\r\n  startY: system.startY ?? 0,\r\n  switches: system.switches ?? [],\r\n  windowTone: system.windowTone ?? [0, 0, 0, 0],\r\n  editMapId: system.editMapId ?? 0,\r\n  testTroopId: system.testTroopId ?? 0,\r\n  testBattlers: system.testBattlers ?? [],\r\n  versionId: system.versionId ?? 0,\r\n  advanced: system.advanced ?? createAdvanced(),\r\n  armorTypes: system.armorTypes ?? [],\r\n  elements: system.elements ?? [],\r\n  variables: system.variables ?? [],\r\n  equipTypes: system.equipTypes ?? [],\r\n  sounds: system.sounds ?? createSystemSoundsArray(),\r\n  titleBgm: system.titleBgm ?? createAudio(),\r\n  gameoverMe: system.gameoverMe ?? createAudio(),\r\n  battleBgm: system.battleBgm ?? createAudio(),\r\n  defeatMe: system.defeatMe ?? createAudio(),\r\n  victoryMe: system.victoryMe ?? createAudio(),\r\n  battleback1Name: system.battleback1Name ?? \"\",\r\n  battleback2Name: system.battleback2Name ?? \"\",\r\n  battlerName: system.battlerName ?? \"\",\r\n  weaponTypes: system.weaponTypes ?? [],\r\n  skillTypes: system.skillTypes ?? [],\r\n  optDisplayTp: system.optDisplayTp ?? false,\r\n  optDrawTitle: system.optDrawTitle ?? false,\r\n  optExtraExp: system.optExtraExp ?? false,\r\n  optFloorDeath: system.optFloorDeath ?? false,\r\n  optFollowers: system.optFollowers ?? false,\r\n  optKeyItemsNumber: system.optKeyItemsNumber ?? false,\r\n  optSideView: system.optSideView ?? false,\r\n  optSlipDeath: system.optSlipDeath ?? false,\r\n  optTransparent: system.optTransparent ?? false,\r\n  boat: system.boat ?? createVehicle(),\r\n  ship: system.ship ?? createVehicle(),\r\n  airship: system.airship ?? createVehicle(),\r\n  tileSize: system.tileSize ?? 0,\r\n});\r\n\r\nexport const createTerms = (\r\n  proto: {\r\n    messages?: Partial<Terms_Messages>;\r\n    commands?: Partial<Terms_Commands>;\r\n    params?: Partial<ParamTable<string>>;\r\n    basic?: Partial<BasicTerms>;\r\n  } = {}\r\n): System_Terms => ({\r\n  messages: createMessages(proto.messages ?? {}),\r\n  commands: createCommandsArray(proto.commands ?? {}),\r\n  params: createParamNamesArray(proto.params ?? {}),\r\n  basic: createBasicTerms(proto.basic ?? {}),\r\n});\r\n\r\nexport const createBasicTerms = (\r\n  proto: Partial<BasicTerms> = {}\r\n): Terms_BasicArray => [\r\n  proto.level ?? \"\",\r\n  proto.levelA ?? \"\",\r\n  proto.hp ?? \"\",\r\n  proto.hpA ?? \"\",\r\n  proto.mp ?? \"\",\r\n  proto.mpA ?? \"\",\r\n  proto.tp ?? \"\",\r\n  proto.tpA ?? \"\",\r\n  proto.experience ?? \"\",\r\n  proto.exp ?? \"\",\r\n];\r\n\r\nexport const createParamNamesArray = (\r\n  names: Partial<ParamTable<string>> = {}\r\n): Terms_ParamNamesArray => [\r\n  names.mhp ?? \"\",\r\n  names.mmp ?? \"\",\r\n  names.atk ?? \"\",\r\n  names.def ?? \"\",\r\n  names.mat ?? \"\",\r\n  names.mdf ?? \"\",\r\n  names.agi ?? \"\",\r\n  names.luk ?? \"\",\r\n  names.hit ?? \"\",\r\n  names.eva ?? \"\",\r\n];\r\n\r\nexport const createCommandsArray = (\r\n  proto: Partial<Terms_Commands> = {}\r\n): Terms_CommandArray => [\r\n  proto.fight ?? \"\",\r\n  proto.escape ?? \"\",\r\n  proto.attack ?? \"\",\r\n  proto.guard ?? \"\",\r\n  proto.item ?? \"\",\r\n  proto.skill ?? \"\",\r\n  proto.equip ?? \"\",\r\n  proto.status ?? \"\",\r\n  proto.formation ?? \"\",\r\n  proto.save ?? \"\",\r\n  proto.gameEnd ?? \"\",\r\n  proto.options ?? \"\",\r\n  proto.weapon ?? \"\",\r\n  proto.armor ?? \"\",\r\n  proto.keyItem ?? \"\",\r\n  proto.equip2 ?? \"\",\r\n  proto.optimize ?? \"\",\r\n  proto.clear ?? \"\",\r\n  proto.newGame ?? \"\",\r\n  proto.continue_ ?? \"\",\r\n  proto.notUsed20 ?? \"\",\r\n  proto.toTitle ?? \"\",\r\n  proto.cancel ?? \"\",\r\n  proto.notUsed23 ?? \"\",\r\n  proto.buy ?? \"\",\r\n  proto.sell ?? \"\",\r\n];\r\n\r\nexport const createMessages = (\r\n  proto: Partial<Terms_Messages> = {}\r\n): Terms_Messages => ({\r\n  alwaysDash: proto.alwaysDash ?? \"\",\r\n  commandRemember: proto.commandRemember ?? \"\",\r\n  touchUI: proto.touchUI ?? \"\",\r\n  bgmVolume: proto.bgmVolume ?? \"\",\r\n  bgsVolume: proto.bgsVolume ?? \"\",\r\n  meVolume: proto.meVolume ?? \"\",\r\n  seVolume: proto.seVolume ?? \"\",\r\n  possession: proto.possession ?? \"\",\r\n  expTotal: proto.expTotal ?? \"\",\r\n  expNext: proto.expNext ?? \"\",\r\n  saveMessage: proto.saveMessage ?? \"\",\r\n  loadMessage: proto.loadMessage ?? \"\",\r\n  file: proto.file ?? \"\",\r\n  autosave: proto.autosave ?? \"\",\r\n  partyName: proto.partyName ?? \"\",\r\n  emerge: proto.emerge ?? \"\",\r\n  preemptive: proto.preemptive ?? \"\",\r\n  surprise: proto.surprise ?? \"\",\r\n  escapeStart: proto.escapeStart ?? \"\",\r\n  escapeFailure: proto.escapeFailure ?? \"\",\r\n  victory: proto.victory ?? \"\",\r\n  defeat: proto.defeat ?? \"\",\r\n  obtainExp: proto.obtainExp ?? \"\",\r\n  obtainGold: proto.obtainGold ?? \"\",\r\n  obtainItem: proto.obtainItem ?? \"\",\r\n  levelUp: proto.levelUp ?? \"\",\r\n  obtainSkill: proto.obtainSkill ?? \"\",\r\n  useItem: proto.useItem ?? \"\",\r\n  criticalToEnemy: proto.criticalToEnemy ?? \"\",\r\n  criticalToActor: proto.criticalToActor ?? \"\",\r\n  actorDamage: proto.actorDamage ?? \"\",\r\n  actorRecovery: proto.actorRecovery ?? \"\",\r\n  actorGain: proto.actorGain ?? \"\",\r\n  actorLoss: proto.actorLoss ?? \"\",\r\n  actorDrain: proto.actorDrain ?? \"\",\r\n  actorNoDamage: proto.actorNoDamage ?? \"\",\r\n  actorNoHit: proto.actorNoHit ?? \"\",\r\n  enemyDamage: proto.enemyDamage ?? \"\",\r\n  enemyRecovery: proto.enemyRecovery ?? \"\",\r\n  enemyGain: proto.enemyGain ?? \"\",\r\n  enemyLoss: proto.enemyLoss ?? \"\",\r\n  enemyDrain: proto.enemyDrain ?? \"\",\r\n  enemyNoDamage: proto.enemyNoDamage ?? \"\",\r\n  enemyNoHit: proto.enemyNoHit ?? \"\",\r\n  evasion: proto.evasion ?? \"\",\r\n  magicEvasion: proto.magicEvasion ?? \"\",\r\n  magicReflection: proto.magicReflection ?? \"\",\r\n  counterAttack: proto.counterAttack ?? \"\",\r\n  substitute: proto.substitute ?? \"\",\r\n  buffAdd: proto.buffAdd ?? \"\",\r\n  debuffAdd: proto.debuffAdd ?? \"\",\r\n  buffRemove: proto.buffRemove ?? \"\",\r\n  actionFailure: proto.actionFailure ?? \"\",\r\n});\r\nexport const createAdvanced = (\r\n  proto: Partial<System_Advanced> = {}\r\n): System_Advanced => ({\r\n  gameId: proto.gameId ?? 0,\r\n  screenWidth: proto.screenWidth ?? 0,\r\n  screenHeight: proto.screenHeight ?? 0,\r\n  uiAreaWidth: proto.uiAreaWidth ?? 0,\r\n  uiAreaHeight: proto.uiAreaHeight ?? 0,\r\n  windowOpacity: proto.windowOpacity ?? 0,\r\n  screenScale: proto.screenScale ?? 0,\r\n  numberFontFilename: proto.numberFontFilename ?? \"\",\r\n  mainFontFilename: proto.mainFontFilename ?? \"\",\r\n  fallbackFonts: proto.fallbackFonts ?? \"\",\r\n  fontSize: proto.fontSize ?? 0,\r\n});\r\n\r\nexport const createVehicle = (\r\n  proto: Partial<Data_Vehicle> = {}\r\n): Data_Vehicle => ({\r\n  bgm: proto.bgm ?? createAudio(),\r\n  characterIndex: proto.characterIndex ?? 0,\r\n  characterName: proto.characterName ?? \"\",\r\n  startMapId: proto.startMapId ?? 0,\r\n  startX: proto.startX ?? 0,\r\n  startY: proto.startY ?? 0,\r\n});\r\n\r\nexport const createSystemSoundsArray = (\r\n  proto: Partial<SystemSounds> = {}\r\n): System_SoundsArray => [\r\n  proto.cursor ?? createAudio(),\r\n  proto.ok ?? createAudio(),\r\n  proto.cancel ?? createAudio(),\r\n  proto.buzzer ?? createAudio(),\r\n  proto.equip ?? createAudio(),\r\n  proto.save ?? createAudio(),\r\n  proto.load ?? createAudio(),\r\n  proto.battleStart ?? createAudio(),\r\n  proto.escape ?? createAudio(),\r\n  proto.enemyAttack ?? createAudio(),\r\n  proto.enemyDamage ?? createAudio(),\r\n  proto.enemyCollapse ?? createAudio(),\r\n  proto.bossCollapse1 ?? createAudio(),\r\n  proto.bossCollapse2 ?? createAudio(),\r\n  proto.actorDamage ?? createAudio(),\r\n  proto.actorCollapse ?? createAudio(),\r\n  proto.playRecovery ?? createAudio(),\r\n  proto.playMiss ?? createAudio(),\r\n  proto.playEvasion ?? createAudio(),\r\n  proto.playMagicEvasion ?? createAudio(),\r\n  proto.playReflection ?? createAudio(),\r\n  proto.shop ?? createAudio(),\r\n  proto.useItem ?? createAudio(),\r\n  proto.useSkill ?? createAudio(),\r\n];\r\n","import type { EventCode, EventCommandLike } from \"@sigureya/rpgtypes\";\r\n\r\nexport const codeTest = <Code extends EventCode>(\r\n  code: Code,\r\n  command: EventCommandLike | undefined\r\n): command is EventCommandLike<Code> => {\r\n  if (!command) {\r\n    return false;\r\n  }\r\n  return code === command.code;\r\n};\r\n","export const ERROR_COMMAND_MESSAGE = \"MessageHeader invalid command\" as const;\r\nexport const ERROR_COMMAND_SCRIPT = \"Script invalid command\" as const;\r\nexport const ERROR_INVALID_HEAD = \"Invalid Head\" as const;\r\n","import type {\r\n  EventCommandLike,\r\n  EventCode,\r\n  EventCommand,\r\n  ExtractCommandByParam,\r\n} from \"@sigureya/rpgtypes\";\r\nimport { codeTest } from \"./commandCheck\";\r\nimport { ERROR_INVALID_HEAD } from \"./errors/\";\r\n\r\nexport const isBodyParams = (\r\n  param: unknown[]\r\n): param is [string] & { length: 1 } => {\r\n  return typeof param[0] === \"string\" && param.length === 1;\r\n};\r\n\r\nexport const isHeadCommand = <Code extends EventCode>(\r\n  code: Code,\r\n  command: EventCommandLike | undefined\r\n): command is {\r\n  code: Code;\r\n  indent: number;\r\n  parameters: [string];\r\n} => {\r\n  if (!command) {\r\n    return false;\r\n  }\r\n  return code === command.code && isBodyParams(command.parameters);\r\n};\r\n\r\nexport const pickCommands = <Code extends EventCode>(\r\n  code: Code,\r\n  arrya: ReadonlyArray<EventCommand>,\r\n  start: number\r\n): Array<EventCommandLike<Code, [string]>> => {\r\n  const result: EventCommandLike<Code, [string]>[] = [];\r\n  for (let i = start; i < arrya.length; i++) {\r\n    const command = arrya[i];\r\n    if (codeTest(code, command) && isBodyParams(command.parameters)) {\r\n      result.push({\r\n        code: code,\r\n        indent: command.indent,\r\n        parameters: [command.parameters[0]],\r\n      });\r\n    } else {\r\n      break;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const pickHead = <Code extends ExtractCommandByParam<[string]>[\"code\"]>(\r\n  commands: ReadonlyArray<EventCommand>,\r\n  index: number,\r\n  code: Code\r\n): EventCommandLike<Code, [string]> => {\r\n  const head = commands[index];\r\n  if (head) {\r\n    if (codeTest(code, head) && isBodyParams(head.parameters)) {\r\n      return {\r\n        code: code,\r\n        indent: head.indent,\r\n        parameters: [head.parameters[0]],\r\n      };\r\n    }\r\n  }\r\n  throw new Error(ERROR_INVALID_HEAD, { cause: head });\r\n};\r\n","import type {\r\n  EventCommand,\r\n  Command_Comment,\r\n  Command_CommentBody,\r\n} from \"@sigureya/rpgtypes\";\r\nimport { COMMENT, COMMENT_BODY } from \"@sigureya/rpgtypes\";\r\nimport { pickHead, pickCommands } from \"./pickCommands\";\r\nimport type { EventCommandPair } from \"./pairTypes\";\r\n\r\nexport const pickComments = (\r\n  array: ReadonlyArray<EventCommand>,\r\n  start: number\r\n): EventCommandPair<Command_Comment, Command_CommentBody> => {\r\n  const head = pickHead(array, start, COMMENT);\r\n\r\n  return {\r\n    head: head,\r\n    bodys: pickCommands(COMMENT_BODY, array, start + 1),\r\n  };\r\n};\r\n","import type {\r\n  EventCommand,\r\n  Command_ScriptHeader,\r\n  Command_ScriptBody,\r\n} from \"@sigureya/rpgtypes\";\r\nimport { SCRIPT_EVAL, SCRIPT_EVAL_BODY } from \"@sigureya/rpgtypes\";\r\nimport { pickCommands, pickHead } from \"./pickCommands\";\r\nimport type { EventCommandPair } from \"./pairTypes\";\r\n\r\nexport const pickScripts = (\r\n  arrya: ReadonlyArray<EventCommand>,\r\n  start: number\r\n): EventCommandPair<Command_ScriptHeader, Command_ScriptBody> => {\r\n  const head = pickHead(arrya, start, SCRIPT_EVAL);\r\n  return {\r\n    head: head,\r\n    bodys: pickCommands(SCRIPT_EVAL_BODY, arrya, start + 1),\r\n  };\r\n};\r\n","import type {\r\n  Command_ShowMessage,\r\n  Command_ShowMessageBody,\r\n} from \"@sigureya/rpgtypes\";\r\nimport {\r\n  SHOW_MESSAGE,\r\n  SHOW_MESSAGE_BODY,\r\n  type EventCommand,\r\n} from \"@sigureya/rpgtypes\";\r\nimport { pickCommands } from \"./pickCommands\";\r\nimport { ERROR_COMMAND_MESSAGE } from \"./errors\";\r\nimport type { EventCommandPair } from \"./pairTypes\";\r\n\r\nexport const pickMessageHeader = (\r\n  arrya: ReadonlyArray<EventCommand>,\r\n  start: number\r\n): Command_ShowMessage => {\r\n  const head = arrya[start];\r\n  if (head) {\r\n    if (isMessageHeader(head)) {\r\n      return head;\r\n    }\r\n  }\r\n  throw new Error(ERROR_COMMAND_MESSAGE, { cause: head });\r\n};\r\n\r\nexport const isMessageHeader = (\r\n  command: EventCommand | undefined\r\n): command is Command_ShowMessage => {\r\n  if (!command) {\r\n    return false;\r\n  }\r\n  if (command.code !== SHOW_MESSAGE) {\r\n    return false;\r\n  }\r\n  if (![4, 5].includes(command.parameters.length)) {\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    typeof command.parameters[0] === \"string\" &&\r\n    typeof command.parameters[1] === \"number\" &&\r\n    typeof command.parameters[2] === \"number\" &&\r\n    typeof command.parameters[3] === \"number\"\r\n    //    typeof command.parameters[4] === \"string\"\r\n  );\r\n};\r\nexport const pickMessageWithHead = (\r\n  arrya: ReadonlyArray<EventCommand>,\r\n  start: number\r\n): EventCommandPair<Command_ShowMessage, Command_ShowMessageBody> => {\r\n  const head = pickMessageHeader(arrya, start);\r\n  return {\r\n    head: head,\r\n    bodys: pickCommands(SHOW_MESSAGE_BODY, arrya, start + 1),\r\n  };\r\n};\r\n","import type {\r\n  EventCommand,\r\n  Command_ShowScrollingText,\r\n  Command_ShowScrollingTextBody,\r\n} from \"@sigureya/rpgtypes\";\r\nimport {\r\n  SHOW_SCROLLING_TEXT,\r\n  SHOW_SCROLLING_TEXT_BODY,\r\n} from \"@sigureya/rpgtypes\";\r\nimport { codeTest } from \"./commandCheck\";\r\nimport { pickCommands } from \"./pickCommands\";\r\nimport type { CommandReadError } from \"./errors/\";\r\nimport type { EventCommandPair } from \"./pairTypes\";\r\nexport type CommandPair_ScrollingText = EventCommandPair<\r\n  Command_ShowScrollingText,\r\n  Command_ShowScrollingTextBody\r\n>;\r\nexport const ERROR_MESSAGE = \"ScrollTextHeader invalid command\" as const;\r\n\r\nexport const pickScrollTextHeader = (\r\n  array: ReadonlyArray<EventCommand>,\r\n  start: number\r\n): Command_ShowScrollingText => {\r\n  const cmd = array[start];\r\n  if (codeTest(SHOW_SCROLLING_TEXT, cmd)) {\r\n    return cmd;\r\n  }\r\n  const error: CommandReadError = {\r\n    headCode: SHOW_SCROLLING_TEXT,\r\n    bodyCode: SHOW_SCROLLING_TEXT_BODY,\r\n    index: start,\r\n  };\r\n  throw new Error(ERROR_MESSAGE, { cause: error });\r\n};\r\n\r\nexport const pickScrollText = (\r\n  array: ReadonlyArray<EventCommand>,\r\n  start: number\r\n): CommandPair_ScrollingText => {\r\n  const head = pickScrollTextHeader(array, start);\r\n  return {\r\n    head: head,\r\n    bodys: pickCommands(SHOW_SCROLLING_TEXT_BODY, array, start + 1),\r\n  };\r\n};\r\n","import type { EventCode, EventCommandLike } from \"@sigureya/rpgtypes\";\r\n\r\nexport const joinCommandBodies = <\r\n  Command extends EventCommandLike<EventCode, [string]>\r\n>(\r\n  array: ReadonlyArray<Command>,\r\n  sepadrator = \"\\n\"\r\n): string => {\r\n  return array.map((v) => v.parameters[0]).join(sepadrator);\r\n};\r\n","import type * as RpgTypes from \"@sigureya/rpgtypes\";\r\nimport type { EventCommandGroup } from \"./groopTypes\";\r\nimport { joinCommandBodies } from \"./join\";\r\n\r\ntype TextCommandBody = RpgTypes.ExtractCommandByParam<[string]>;\r\nexport abstract class BaseEventCommandGroup<\r\n  Header extends RpgTypes.EventCommand,\r\n  Body extends TextCommandBody\r\n> implements EventCommandGroup<Header, Body>\r\n{\r\n  constructor(public header: Header, public bodies: Body[]) {}\r\n  protected abstract getExpandedBodies(): TextCommandBody[];\r\n  abstract normalizedCommands(): [Header, Body] | [Header];\r\n  abstract mergedBody(): TextCommandBody;\r\n\r\n  getBodyText(separator: string = \"\\n\"): string {\r\n    return joinCommandBodies(this.getExpandedBodies(), separator);\r\n  }\r\n  jopinHedderAndBody(): [Header, ...Body[]] {\r\n    return [this.header, ...this.bodies];\r\n  }\r\n\r\n  joinCommandBodies() {\r\n    return this.getExpandedBodies();\r\n  }\r\n}\r\n\r\nexport class SimpleEventCommandGroup<\r\n  Header extends RpgTypes.EventCommand,\r\n  Body extends TextCommandBody\r\n> extends BaseEventCommandGroup<Header, Body> {\r\n  constructor(public bodyCode: Body[\"code\"], header: Header, bodies: Body[]) {\r\n    super(header, bodies);\r\n  }\r\n  protected getExpandedBodies(): Body[] {\r\n    return this.bodies;\r\n  }\r\n  normalizedCommands(): [Header, Body] | [Header] {\r\n    const headder: Header = {\r\n      ...this.header,\r\n      code: this.header.code,\r\n      indent: this.header.indent,\r\n      parameters: [...this.header.parameters],\r\n    };\r\n    if (this.bodies.length === 0) {\r\n      return [headder];\r\n    }\r\n    return [headder, this.mergedBody()];\r\n  }\r\n  mergedBody(): Body {\r\n    return {\r\n      code: this.bodyCode,\r\n      indent: this.header.indent,\r\n      parameters: [this.getBodyText()],\r\n    } as Body;\r\n  }\r\n}\r\n\r\nexport class CombinedEventCommandGroup<\r\n  Header extends TextCommandBody,\r\n  Body extends TextCommandBody\r\n> extends BaseEventCommandGroup<Header, Body> {\r\n  protected getExpandedBodies(): [Header, ...Body[]] {\r\n    return [this.header, ...this.bodies];\r\n  }\r\n  mergedBody(): Header {\r\n    return {\r\n      code: this.header.code,\r\n      indent: this.header.indent,\r\n      parameters: [this.getBodyText()],\r\n    } as Header;\r\n  }\r\n\r\n  normalizedCommands(): [Header] {\r\n    return [this.mergedBody()];\r\n  }\r\n}\r\n","import type * as RpgTypes from \"@sigureya/rpgtypes\";\r\n\r\n/**\r\n * @description 『MPP_ChoiceEx.js』に対応するための特殊文字列\r\n */\r\nexport const CHOICE_HELP_TEXT = \"選択肢ヘルプ\" as const;\r\n\r\nexport const isChoiceHelp = (command: RpgTypes.Command_Comment) => {\r\n  return command.parameters[0] === CHOICE_HELP_TEXT;\r\n};\r\n","import type {\r\n  Command_ShowMessage,\r\n  Command_ShowMessageBody,\r\n  Command_ShowScrollingText,\r\n  Command_ShowScrollingTextBody,\r\n  Command_Comment,\r\n  Command_CommentBody,\r\n  Command_ScriptHeader,\r\n  Command_ScriptBody,\r\n} from \"@sigureya/rpgtypes\";\r\nimport {\r\n  CombinedEventCommandGroup,\r\n  SimpleEventCommandGroup,\r\n} from \"./commandGroop\";\r\nimport { isChoiceHelp } from \"./commentUtils\";\r\n\r\nexport const createMessageGroup = (\r\n  hedder: Command_ShowMessage,\r\n  bodies: Command_ShowMessageBody[] = []\r\n) => {\r\n  return new SimpleEventCommandGroup<\r\n    Command_ShowMessage,\r\n    Command_ShowMessageBody\r\n  >(401, hedder, bodies);\r\n};\r\n\r\nexport const createScrlloingTextGroup = (\r\n  hedder: Command_ShowScrollingText,\r\n  bodies: Command_ShowScrollingTextBody[] = []\r\n) => {\r\n  return new SimpleEventCommandGroup<\r\n    Command_ShowScrollingText,\r\n    Command_ShowScrollingTextBody\r\n  >(405, hedder, bodies);\r\n};\r\n\r\nexport const createCommentGroup = (\r\n  hedder: Command_Comment,\r\n  bodies: Command_CommentBody[] = []\r\n) => {\r\n  if (isChoiceHelp(hedder)) {\r\n    return new SimpleEventCommandGroup<Command_Comment, Command_CommentBody>(\r\n      408,\r\n      hedder,\r\n      bodies\r\n    );\r\n  }\r\n  return new CombinedEventCommandGroup<Command_Comment, Command_CommentBody>(\r\n    hedder,\r\n    bodies\r\n  );\r\n};\r\n\r\nexport const createScriptGroup = (\r\n  hedder: Command_ScriptHeader,\r\n  bodies: Command_ScriptBody[] = []\r\n) => {\r\n  return new CombinedEventCommandGroup<\r\n    Command_ScriptHeader,\r\n    Command_ScriptBody\r\n  >(hedder, bodies);\r\n};\r\n","import type { EventCommand } from \"@sigureya/rpgtypes\";\r\n\r\nimport {\r\n  pickComments,\r\n  pickMessageWithHead,\r\n  pickScripts,\r\n  pickScrollText,\r\n} from \"./pickCommands\";\r\nimport {\r\n  createMessageGroup,\r\n  createCommentGroup,\r\n  createScriptGroup,\r\n  createScrlloingTextGroup,\r\n} from \"./class\";\r\nimport type {\r\n  EventCommandGroup_Comment,\r\n  EventCommandGroup_Message,\r\n  EventCommandGroup_Script,\r\n  EventCommandGroup_ScrollingText,\r\n} from \"./class\";\r\nexport const handleGroupMessage = <Result>(\r\n  array: ReadonlyArray<EventCommand>,\r\n  index: number,\r\n  func: (groop: EventCommandGroup_Message) => Result\r\n): Result => {\r\n  const pair = pickMessageWithHead(array, index);\r\n\r\n  const group = createMessageGroup(pair.head, pair.bodys);\r\n\r\n  return func(group);\r\n};\r\n\r\nexport const handleGroupScrollingText = <Result>(\r\n  array: ReadonlyArray<EventCommand>,\r\n  index: number,\r\n  func: (groop: EventCommandGroup_ScrollingText) => Result\r\n): Result => {\r\n  const pair = pickScrollText(array, index);\r\n  const group = createScrlloingTextGroup(pair.head, pair.bodys);\r\n  return func(group);\r\n};\r\n\r\nexport const handleGroupComment = <Result>(\r\n  array: ReadonlyArray<EventCommand>,\r\n  index: number,\r\n  func: (group: EventCommandGroup_Comment) => Result\r\n): Result => {\r\n  const pair = pickComments(array, index);\r\n  const group = createCommentGroup(pair.head, pair.bodys);\r\n  return func(group);\r\n};\r\n\r\nexport const handleGroupScript = <Result>(\r\n  array: ReadonlyArray<EventCommand>,\r\n  index: number,\r\n  func: (group: EventCommandGroup_Script) => Result\r\n): Result => {\r\n  const pair = pickScripts(array, index);\r\n  const groop = createScriptGroup(pair.head, pair.bodys);\r\n  return func(groop);\r\n};\r\n","import {\r\n  CHANGE_NAME,\r\n  CHANGE_NICKNAME,\r\n  CHANGE_PROFILE,\r\n  COMMENT,\r\n  SCRIPT_EVAL,\r\n  SHOW_CHOICES,\r\n  SHOW_CHOICES_ITEM,\r\n  SHOW_MESSAGE,\r\n  SHOW_SCROLLING_TEXT,\r\n} from \"@sigureya/rpgtypes\";\r\nimport type { EventCommand } from \"@sigureya/rpgtypes\";\r\nimport {\r\n  handleGroupMessage,\r\n  handleGroupScrollingText,\r\n  handleGroupComment,\r\n  handleGroupScript,\r\n} from \"./commandGroup\";\r\nimport type { TextCommandMapper } from \"./textCommandMapper\";\r\n\r\nexport const handlerDispatch = <T>(\r\n  array: ReadonlyArray<EventCommand>,\r\n  index: number,\r\n  table: TextCommandMapper<T>\r\n): T => {\r\n  const command = array[index];\r\n  switch (command.code) {\r\n    case SHOW_MESSAGE:\r\n      return handleGroupMessage(array, index, table.showMessage);\r\n    case SHOW_SCROLLING_TEXT:\r\n      return handleGroupScrollingText(array, index, table.showScrollingText);\r\n    case COMMENT:\r\n      return handleGroupComment(array, index, table.comment);\r\n    case SCRIPT_EVAL:\r\n      return handleGroupScript(array, index, table.script);\r\n\r\n    case SHOW_CHOICES:\r\n      return table.showChoices(command, index, array);\r\n    case SHOW_CHOICES_ITEM:\r\n      return table.choiceWhen(command, index, array);\r\n    case CHANGE_NAME:\r\n      return table.changeName(command, index, array);\r\n    case CHANGE_PROFILE:\r\n      return table.changeProfile(command, index, array);\r\n    case CHANGE_NICKNAME:\r\n      return table.changeNickname(command, index, array);\r\n\r\n    default:\r\n      return table.other(command, index, array);\r\n  }\r\n};\r\n\r\nexport const mapTextCommand = <T>(\r\n  list: ReadonlyArray<EventCommand>,\r\n  table: TextCommandMapper<T>\r\n): T[] => {\r\n  return list.map<T>((command, index, array) =>\r\n    handlerDispatch(array, index, table)\r\n  );\r\n};\r\n","import type { EventCommand } from \"@sigureya/rpgtypes\";\r\nimport * as Code from \"@sigureya/rpgtypes\";\r\n\r\nimport type { EventCommandGroup } from \"./commandGroup\";\r\nimport {\r\n  handleGroupMessage,\r\n  handleGroupScrollingText,\r\n  handleGroupComment,\r\n  handleGroupScript,\r\n} from \"./commandGroup\";\r\nimport type { CallBackFunc } from \"./types\";\r\nimport type { PartialMappingObject } from \"./mapperType\";\r\n\r\nexport const callHandler = <T, Command extends EventCommand>(\r\n  command: Command,\r\n  index: number,\r\n  array: ReadonlyArray<EventCommand>,\r\n  handler: CallBackFunc<Command, T> | undefined,\r\n  fallback: CallBackFunc<EventCommand, T>\r\n): T => {\r\n  return handler ? handler(command, index, array) : fallback(command, index, array);\r\n};\r\n\r\nconst callXXX = <\r\n  Result,\r\n  Head extends EventCommand,\r\n  Body extends Code.ExtractCommandByParam<[string]>\r\n>(\r\n  command: Head,\r\n  index: number,\r\n  array: ReadonlyArray<EventCommand>,\r\n  singleHandler: CallBackFunc<Head, Result> | undefined,\r\n  groopHandler: ((groop: EventCommandGroup<Head, Body>) => Result) | undefined,\r\n  fallback: CallBackFunc<EventCommand, Result>\r\n) => {\r\n  // if (groopHandler) {\r\n  // }\r\n\r\n  return fallback(command, index, array);\r\n};\r\n\r\nexport const mappingCommandList = <T>(\r\n  array: ReadonlyArray<EventCommand>,\r\n  table: PartialMappingObject<T>\r\n): T[] => {\r\n  return array.map<T>((command, index) => mappingCommand(array, index, table));\r\n};\r\n\r\nexport const flatMappingCommandList = <T>(\r\n  array: ReadonlyArray<EventCommand>,\r\n  table: PartialMappingObject<T[]>\r\n): T[] => {\r\n  return array.flatMap((command, index) => mappingCommand(array, index, table));\r\n};\r\n\r\nexport const mappingCommand = <T>(\r\n  array: ReadonlyArray<EventCommand>,\r\n  index: number,\r\n  table: PartialMappingObject<T>\r\n): T => {\r\n  const command: EventCommand = array[index];\r\n  switch (command.code) {\r\n    // メッセージ関連\r\n    case Code.SHOW_MESSAGE:\r\n      return table.showMessage\r\n        ? handleGroupMessage(array, index, table.showMessage)\r\n        : table.other(command, index, array);\r\n    case Code.SHOW_MESSAGE_BODY:\r\n      return callHandler(command, index, array, table.showMessageBody, table.other);\r\n    case Code.SHOW_SCROLLING_TEXT:\r\n      return table.showScrollingText\r\n        ? handleGroupScrollingText(array, index, table.showScrollingText)\r\n        : table.other(command, index, array);\r\n    case Code.SHOW_SCROLLING_TEXT_BODY:\r\n      return callHandler(command, index, array, table.showScrollingTextBody, table.other);\r\n    case Code.SHOW_CHOICES:\r\n      return callHandler(command, index, array, table.showChoices, table.other);\r\n    case Code.SHOW_CHOICES_ITEM:\r\n      return callHandler(command, index, array, table.choiceWhen, table.other);\r\n\r\n    // コメント・スクリプト関連\r\n    case Code.COMMENT:\r\n      return table.comment\r\n        ? handleGroupComment(array, index, table.comment)\r\n        : table.other(command, index, array);\r\n    case Code.COMMENT_BODY:\r\n      return callHandler(command, index, array, table.commentBody, table.other);\r\n    case Code.SCRIPT_EVAL:\r\n      return table.script\r\n        ? handleGroupScript(array, index, table.script)\r\n        : table.other(command, index, array);\r\n    case Code.SCRIPT_EVAL_BODY:\r\n      return callHandler(command, index, array, table.scriptBody, table.other);\r\n\r\n    // 条件・制御系\r\n    case Code.CONDITIONAL_BRANCH:\r\n      return callHandler(command, index, array, table.conditionalBranch, table.other);\r\n    case Code.CONTROL_SWITCHES:\r\n      return callHandler(command, index, array, table.controlSwitch, table.other);\r\n    case Code.CONTROL_VARIABLES:\r\n      return callHandler(command, index, array, table.controlVariable, table.other);\r\n    case Code.CONTROL_SELF_SWITCH:\r\n      return callHandler(command, index, array, table.controlSelfSwitch, table.other);\r\n    case Code.CONTROL_TIMER:\r\n      return callHandler(command, index, array, table.controlTimer, table.other);\r\n\r\n    case Code.COMMON_EVENT:\r\n      return callHandler(command, index, array, table.commonEvent, table.other);\r\n    // メニュー\r\n    case Code.CHANGE_SAVE_ACCESS:\r\n      return callHandler(command, index, array, table.changeSaveAccess, table.other);\r\n    case Code.CHANGE_MENU_ACCESS:\r\n      return callHandler(command, index, array, table.changeMenuAccess, table.other);\r\n    case Code.CHANGE_ENCOUNTER:\r\n      return callHandler(command, index, array, table.changeEncounter, table.other);\r\n    case Code.CHANGE_FORMATION_ACCESS:\r\n      return callHandler(command, index, array, table.changeFormationAccess, table.other);\r\n\r\n    // キャラクター情報変更\r\n    case Code.CHANGE_NAME:\r\n      return callHandler(command, index, array, table.changeName, table.other);\r\n    case Code.CHANGE_PROFILE:\r\n      return callHandler(command, index, array, table.changeProfile, table.other);\r\n    case Code.CHANGE_NICKNAME:\r\n      return callHandler(command, index, array, table.changeNickname, table.other);\r\n    case Code.CHANGE_ACTOR_IMAGES:\r\n      return callHandler(command, index, array, table.changeActorImages, table.other);\r\n    case Code.CHANGE_VEHICLE_IMAGE:\r\n      return callHandler(command, index, array, table.changeVehicleImage, table.other);\r\n\r\n    // BGM・音楽関連\r\n    case Code.CHANGE_BATTLE_BGM:\r\n      return callHandler(command, index, array, table.changeBattleBGM, table.other);\r\n    case Code.CHANGE_VICTORY_ME:\r\n      return callHandler(command, index, array, table.changeVictoryME, table.other);\r\n    case Code.CHANGE_DEFEAT_ME:\r\n      return callHandler(command, index, array, table.changeDefeatME, table.other);\r\n\r\n    case Code.PLAY_BGM:\r\n      return callHandler(command, index, array, table.playBGM, table.other);\r\n    case Code.FADEOUT_BGM:\r\n      return callHandler(command, index, array, table.fadeOutBGM, table.other);\r\n    case Code.PLAY_SE:\r\n      return callHandler(command, index, array, table.playSE, table.other);\r\n    case Code.STOP_SE:\r\n      return callHandler(command, index, array, table.stopSE, table.other);\r\n    case Code.PLAY_ME:\r\n      return callHandler(command, index, array, table.playME, table.other);\r\n\r\n    // ラベル・ジャンプ\r\n    case Code.LABEL:\r\n      return callHandler(command, index, array, table.label, table.other);\r\n    case Code.LABEL_JUMP:\r\n      return callHandler(command, index, array, table.labelJump, table.other);\r\n\r\n    // 画面演出\r\n    case Code.CHANGE_WINDOW_COLOR:\r\n      return callHandler(command, index, array, table.changeWindowColor, table.other);\r\n    case Code.TINT_SCREEN:\r\n      return callHandler(command, index, array, table.tintScreen, table.other);\r\n    case Code.FLASH_SCREEN:\r\n      return callHandler(command, index, array, table.flashScreen, table.other);\r\n    case Code.SHAKE_SCREEN:\r\n      return callHandler(command, index, array, table.shakeScreen, table.other);\r\n\r\n    // ピクチャー\r\n    case Code.SHOW_PICTURE:\r\n      return callHandler(command, index, array, table.showPicture, table.other);\r\n    case Code.MOVE_PICTURE:\r\n      return callHandler(command, index, array, table.movePicture, table.other);\r\n    case Code.ROTATE_PICTURE:\r\n      return callHandler(command, index, array, table.rotatePicture, table.other);\r\n    case Code.TINT_PICTURE:\r\n      return callHandler(command, index, array, table.tintPicture, table.other);\r\n    case Code.ERASE_PICTURE:\r\n      return callHandler(command, index, array, table.erasePicture, table.other);\r\n\r\n    // ゲーム進行\r\n    case Code.BATTLE_PROCESSING:\r\n      return callHandler(command, index, array, table.battleProcessing, table.other);\r\n    case Code.WAIT:\r\n      return callHandler(command, index, array, table.wait, table.other);\r\n    case Code.GAME_OVER:\r\n      return callHandler(command, index, array, table.gameover, table.other);\r\n\r\n    // 未整理\r\n    case Code.CHANGE_PARALLAX:\r\n      return callHandler(command, index, array, table.changeParallax, table.other);\r\n    case Code.CHANGE_BATTLE_BACKGROUND:\r\n      return callHandler(command, index, array, table.changeBattleBackground, table.other);\r\n\r\n    case Code.PLAY_MOVIE:\r\n      return callHandler(command, index, array, table.playMovie, table.other);\r\n    case Code.CHANGE_TRANSPARENCY:\r\n      return callHandler(command, index, array, table.changeTransparency, table.other);\r\n    case Code.SET_WEATHER_EFFECT:\r\n      return callHandler(command, index, array, table.setWeatherEffects, table.other);\r\n\r\n    case Code.CHANGE_GOLD:\r\n      return callHandler(command, index, array, table.changeGold, table.other);\r\n    case Code.SHOW_ANIMATION:\r\n      return callHandler(command, index, array, table.showAnimation, table.other);\r\n    case Code.TRANSFER_PLAYER:\r\n      return callHandler(command, index, array, table.transferPlayer, table.other);\r\n    case Code.SET_VEHICLE_LOCATION:\r\n      return callHandler(command, index, array, table.setVehicleLocation, table.other);\r\n    case Code.SET_EVENT_LOCATION:\r\n      return callHandler(command, index, array, table.setEventLocation, table.other);\r\n\r\n    default:\r\n      return table.other(command, index, array);\r\n  }\r\n};\r\n","import type * as RpgTypes from \"@sigureya/rpgtypes\";\r\nimport { mappingCommandList } from \"./allMapping\";\r\nimport type { MappingObject } from \"./mapperType\";\r\n\r\nexport interface GroupJoinMapper<T>\r\n  extends Pick<\r\n    MappingObject<T>,\r\n    | \"showMessage\"\r\n    | \"showMessageBody\"\r\n    | \"comment\"\r\n    | \"commentBody\"\r\n    | \"script\"\r\n    | \"scriptBody\"\r\n    | \"showScrollingText\"\r\n    | \"showScrollingTextBody\"\r\n    | \"other\"\r\n  > {}\r\n\r\nconst groupJoinMapper: GroupJoinMapper<RpgTypes.EventCommand[]> = {\r\n  // body部分は空の要素で置き換える\r\n  commentBody: () => [],\r\n  showMessageBody: () => [],\r\n  scriptBody: () => [],\r\n  showScrollingTextBody: () => [],\r\n  // ヘッダ側を基準に、Header+Bodyで生成\r\n  showMessage: (data) => data.normalizedCommands(),\r\n  showScrollingText: (data) => data.normalizedCommands(),\r\n  comment: (data) => data.normalizedCommands(),\r\n  script: (data) => data.normalizedCommands(),\r\n  other: (data) => [data],\r\n};\r\n\r\nexport const normalizedCommands = <Command extends RpgTypes.EventCommand>(\r\n  command: ReadonlyArray<Command>\r\n): RpgTypes.EventCommand[][] => {\r\n  return mappingCommandList(command, groupJoinMapper);\r\n};\r\n","import type {\r\n  BattleEventPage,\r\n  Data_CommonEvent,\r\n  Data_Troop,\r\n  MapEventContainer,\r\n} from \"@sigureya/rpgtypes\";\r\nimport type { MapEventContext } from \"./types\";\r\n\r\ninterface EventContainer<Command> {\r\n  id: number;\r\n  pages: {\r\n    list: Command[];\r\n  }[];\r\n}\r\n/**\r\n * Checks whether an event is valid (not null or undefined).\r\n * @param event The event to check.\r\n * @returns `true` if the event is valid, otherwise `false`.\r\n */\r\nconst isValidEvent = <T>(event: T | null | undefined): event is T => {\r\n  return !!event;\r\n};\r\n\r\n/**\r\n * Creates a MapEventContext for an event command.\r\n * @param commands The event commands.\r\n * @param eventId The ID of the event.\r\n * @param pageIndex The index of the page containing the command.\r\n * @returns A MapEventContext object.\r\n */\r\nexport const createEventContext = <T>(\r\n  commands: T,\r\n  eventId: number,\r\n  pageIndex: number\r\n): MapEventContext<T> => ({\r\n  data: commands,\r\n  eventId,\r\n  pageIndex,\r\n});\r\n\r\n/**\r\n * Maps each event command to a MapEventContext.\r\n * @param page The page containing the event commands.\r\n * @param pageIndex The index of the page.\r\n * @param event The event metadata (contains ID).\r\n * @returns An array of MapEventContext objects.\r\n */\r\nexport const createCommandContext = <Command>(\r\n  page: { list: ReadonlyArray<Command> },\r\n  pageIndex: number,\r\n  event: { id: number }\r\n) => {\r\n  return page.list.map<MapEventContext<Command>>((command) => ({\r\n    data: command,\r\n    eventId: event.id,\r\n    pageIndex,\r\n  }));\r\n};\r\n\r\n/**\r\n * Processes all pages within a container and applies a function to each page.\r\n * @param container The container holding multiple event pages.\r\n * @param func The function to apply to each page.\r\n * @returns An array of results obtained by applying the function to each page.\r\n */\r\nexport const processEventPages = <\r\n  Result,\r\n  PageContainer extends { readonly pages: ReadonlyArray<unknown> }\r\n>(\r\n  container: PageContainer,\r\n  func: (\r\n    page: PageContainer[\"pages\"][number],\r\n    pageIndex: number,\r\n    container: PageContainer\r\n  ) => Result\r\n): Result[] => {\r\n  return container.pages.map((page, pageIndex) =>\r\n    func(page, pageIndex, container)\r\n  );\r\n};\r\n\r\n/**\r\n * Processes all events in a map and applies a function to their pages.\r\n * @param map The map containing multiple events.\r\n * @param fn The function to apply to each event page.\r\n * @returns A 2D array where each element represents the processed result of an event's pages.\r\n */\r\nexport const processMapEvents = <Result, Command, Event extends object>(\r\n  map: MapEventContainer<Command, Event & EventContainer<Command>>,\r\n  fn: (\r\n    page: NonNullable<(typeof map)[\"events\"][number]>[\"pages\"][number],\r\n    pageIndex: number,\r\n    container: NonNullable<Event & { id: number; pages: { list: Command[] }[] }>\r\n  ) => Result\r\n): Result[][] => {\r\n  return map.events\r\n    .filter(isValidEvent)\r\n    .map((event) => processEventPages(event, fn));\r\n};\r\n\r\nexport const collectMapEvents = <Result, Command, Event extends { id: number }>(\r\n  map: MapEventContainer<Command, Event & EventContainer<Command>>,\r\n  fn: (\r\n    page: NonNullable<(typeof map)[\"events\"][number]>[\"pages\"][number],\r\n    pageIndex: number,\r\n    container: NonNullable<(typeof map)[\"events\"][number]>\r\n  ) => Result[]\r\n): Result[] => {\r\n  return processMapEvents(map, fn).flat(2);\r\n};\r\n\r\n/**\r\n * Processes all troop event pages.\r\n * @param list The list of troop events.\r\n * @param func The function to apply to each event page.\r\n * @returns A 2D array where each element represents the processed result of a troop's pages.\r\n */\r\nexport const processTroopEvents = <Result>(\r\n  list: ReadonlyArray<Data_Troop>,\r\n  func: (\r\n    page: BattleEventPage,\r\n    pageIndex: number,\r\n    container: Data_Troop\r\n  ) => Result\r\n): Result[][] => {\r\n  return list.map((troop) => processEventPages(troop, func));\r\n};\r\n\r\n/**\r\n * Processes all common events.\r\n * @param events The list of common events.\r\n * @param func The function to apply to each common event.\r\n * @returns An array of processed common events.\r\n */\r\nexport const processCommonEvents = <T>(\r\n  events: ReadonlyArray<Data_CommonEvent>,\r\n  func: (\r\n    common: Readonly<Data_CommonEvent>,\r\n    index: number,\r\n    common2: Readonly<Data_CommonEvent>\r\n  ) => T\r\n): T[] => {\r\n  return events.map((common) => func(common, 0, common));\r\n};\r\n\r\n/**\r\n * Gathers all event command contexts from a map.\r\n * @param map The map containing events.\r\n * @returns A flattened array of MapEventContext objects representing all event commands in the map.\r\n */\r\nexport const gatherEventCommandContext = <\r\n  Command,\r\n  Event extends EventContainer<Command> = EventContainer<Command>\r\n>(\r\n  map: MapEventContainer<Command, Event>\r\n): MapEventContext<Command>[] => {\r\n  const list: MapEventContext<Command>[][][] = processMapEvents(\r\n    map,\r\n    createCommandContext\r\n  );\r\n  return list.flat(2);\r\n};\r\n","import type {\r\n  Data_CommonEvent,\r\n  Data_Troop,\r\n  EventCommand,\r\n  MapEventContainer,\r\n} from \"@sigureya/rpgtypes\";\r\nimport type { EventCommandContainer } from \"./map/\";\r\n\r\ntype EventCommandReplaceFunc = (\r\n  list: ReadonlyArray<EventCommand>\r\n) => EventCommand[];\r\n\r\nexport const replaceEventCommands = <T extends EventCommandContainer>(\r\n  data: T,\r\n  fn: EventCommandReplaceFunc\r\n): T => {\r\n  const newList: EventCommand[] = fn(data.list);\r\n  return {\r\n    ...data,\r\n    list: newList,\r\n  };\r\n};\r\n\r\nexport const replacePages = <\r\n  Pages extends {\r\n    id: number;\r\n    pages: { readonly list: ReadonlyArray<EventCommand> }[];\r\n  }\r\n>(\r\n  container: Pages,\r\n  fn: EventCommandReplaceFunc\r\n): Pages => {\r\n  return {\r\n    ...container,\r\n    pages: container.pages.map((page) => replaceEventCommands(page, fn)),\r\n  };\r\n};\r\n\r\nexport const replaceMapEvents = <Map extends MapEventContainer<EventCommand>>(\r\n  map: Map,\r\n  fn: EventCommandReplaceFunc\r\n): Map => {\r\n  return {\r\n    ...map,\r\n    events: map.events.map((event) => {\r\n      if (!event) {\r\n        return null;\r\n      }\r\n      return replacePages(event, fn);\r\n    }),\r\n  };\r\n};\r\n\r\nexport const replaceCommonEvents = (\r\n  events: ReadonlyArray<Data_CommonEvent>,\r\n  fn: EventCommandReplaceFunc\r\n): Data_CommonEvent[] => {\r\n  return events.map((commonEvent) => replaceEventCommands(commonEvent, fn));\r\n};\r\n\r\nexport const replaceTroops = (\r\n  list: ReadonlyArray<Data_Troop>,\r\n  fn: EventCommandReplaceFunc\r\n): Data_Troop[] => {\r\n  return list.map((troop) => replacePages(troop, fn));\r\n};\r\n","import type {\r\n  Data_CommonEvent,\r\n  Data_Troop,\r\n  EventCommand,\r\n  MapEventContainer,\r\n} from \"@sigureya/rpgtypes\";\r\nimport { replaceCommonEvents, replaceMapEvents, replaceTroops } from \"./rpg\";\r\nimport { normalizedCommands } from \"./commandMapper\";\r\n\r\nexport const normalizedMapData = <Map extends MapEventContainer<EventCommand>>(\r\n  map: Map\r\n): Map => {\r\n  return replaceMapEvents(map, (list) => normalizedCommands(list).flat());\r\n};\r\nexport const normalizedCommonEvents = (\r\n  commonEvents: ReadonlyArray<Data_CommonEvent>\r\n): Data_CommonEvent[] => {\r\n  return replaceCommonEvents(commonEvents, (list) =>\r\n    normalizedCommands(list).flat()\r\n  );\r\n};\r\n\r\nexport const normalizedTroops = (\r\n  troops: ReadonlyArray<Data_Troop>\r\n): Data_Troop[] => {\r\n  return replaceTroops(troops, (list) => normalizedCommands(list).flat());\r\n};\r\n","import type {\r\n  AudioFileParams,\r\n  EventCode,\r\n  EventCommand,\r\n  ExtractCommandByParam,\r\n} from \"@sigureya/rpgtypes\";\r\nimport * as RpgTypes from \"@sigureya/rpgtypes\";\r\n\r\nexport const matchesEventCommand = <Code extends EventCode>(\r\n  command: EventCommand,\r\n  codeList: ReadonlyArray<Code>\r\n): command is Extract<EventCommand, { code: Code }> => {\r\n  return codeList.includes(command.code as Code);\r\n};\r\nexport const isAudioCommand = (\r\n  command: EventCommand\r\n): command is ExtractCommandByParam<[AudioFileParams]> =>\r\n  matchesEventCommand(command, AUDIO_CODE);\r\n\r\nconst AUDIO_CODE: ReadonlyArray<\r\n  ExtractCommandByParam<[AudioFileParams]>[\"code\"]\r\n> = [\r\n  RpgTypes.PLAY_BGM,\r\n  RpgTypes.PLAY_BGS,\r\n  RpgTypes.PLAY_ME,\r\n  RpgTypes.PLAY_SE,\r\n  RpgTypes.CHANGE_BATTLE_BGM,\r\n  RpgTypes.CHANGE_VICTORY_ME,\r\n  RpgTypes.CHANGE_DEFEAT_ME,\r\n  RpgTypes.CHANGE_VEHICLE_BGM,\r\n];\r\nexport const isImageCommand = (command: EventCommand) =>\r\n  matchesEventCommand(command, IMAGE_CODE);\r\n\r\nconst IMAGE_CODE = [\r\n  RpgTypes.SHOW_MESSAGE,\r\n  RpgTypes.SHOW_PICTURE,\r\n  RpgTypes.CHANGE_ACTOR_IMAGES,\r\n  RpgTypes.CHANGE_VEHICLE_IMAGE,\r\n  RpgTypes.CHANGE_PARALLAX,\r\n  RpgTypes.CHANGE_BATTLE_BACKGROUND,\r\n];\r\n","import type {\r\n  AudioFileParams,\r\n  IndexOfCommandParameter,\r\n} from \"@sigureya/rpgtypes\";\r\n\r\nexport interface CommandParameter<T> {\r\n  code: number;\r\n  paramIndex: number;\r\n  value: T;\r\n}\r\n\r\nexport const pickCommandParamString = <\r\n  Params extends unknown[],\r\n  Index extends IndexOfCommandParameter<\r\n    { code: number; parameters: Params },\r\n    string\r\n  >\r\n>(\r\n  command: { code: number; parameters: Params },\r\n  index: Index\r\n): CommandParameter<Params[Index]> => ({\r\n  code: command.code,\r\n  paramIndex: index,\r\n  value: command.parameters[index],\r\n});\r\n\r\nexport const pickCommandParamNumber = <\r\n  Params extends unknown[],\r\n  Index extends IndexOfCommandParameter<\r\n    { code: number; parameters: Params },\r\n    number\r\n  >\r\n>(\r\n  command: { code: number; parameters: Params },\r\n  index: Index\r\n): CommandParameter<Params[Index]> => ({\r\n  code: command.code,\r\n  paramIndex: index,\r\n  value: command.parameters[index],\r\n});\r\nexport const pickCommandParamAudio = <\r\n  Params extends unknown[],\r\n  Index extends IndexOfCommandParameter<\r\n    { code: number; parameters: Params },\r\n    AudioFileParams\r\n  >\r\n>(\r\n  command: { code: number; parameters: Params },\r\n  index: Index\r\n): CommandParameter<Params[Index]> => ({\r\n  code: command.code,\r\n  paramIndex: index,\r\n  value: command.parameters[index],\r\n});\r\n","import type {\r\n  CommandParamaterType,\r\n  EventCode,\r\n  EventCommandLike,\r\n} from \"@sigureya/rpgtypes\";\r\n\r\nexport const createEventCommand = <\r\n  Code extends EventCode,\r\n  Param extends CommandParamaterType<Code>\r\n>(\r\n  code: Code,\r\n  param: Param,\r\n  indent: number = 0\r\n): EventCommandLike<Code, Param> => {\r\n  return {\r\n    code,\r\n    indent,\r\n    parameters: param,\r\n  };\r\n};\r\n","import type { NoteReadResult } from \"./types\";\r\n\r\nexport const createNoteEntity = (key: string, value: string): string => {\r\n  return `<${key}:${value}>`;\r\n};\r\n\r\nexport const makeRegex = () => /<([^<>:]+):([^>]*)>/g;\r\n\r\nexport const readNoteObject = <Result, T extends { note: string }>(\r\n  data: T,\r\n  fn: (key: string, value: string, data: T) => Result\r\n): Result[] => readNoteEx(data.note, (key, value) => fn(key, value, data));\r\n\r\nexport const readNote = (note: string): NoteReadResult[] => {\r\n  return readNoteEx(note, (key, value) => [key, value]);\r\n};\r\n/**\r\n * note文字列を解析し、キーと値のペアを取得します。\r\n * タグが閉じられていない場合、その要素は無視されます。\r\n */\r\nexport const readNoteEx = <Result>(\r\n  note: string,\r\n  fn: (key: string, value: string) => Result\r\n): Result[] => {\r\n  const regex = makeRegex();\r\n  const result: Result[] = [];\r\n  let match: RegExpExecArray | null;\r\n\r\n  while ((match = regex.exec(note)) !== null) {\r\n    result.push(fn(match[1], match[2]));\r\n  }\r\n  return result;\r\n};\r\n/**\r\n *\r\n * @param note\r\n * @param transformFunction この関数の戻り値でvalueを置き換える\r\n * @returns\r\n */\r\nexport const replaceNote = (\r\n  note: string,\r\n  transformFunction: (key: string, value: string) => string\r\n): string => {\r\n  return note.replace(makeRegex(), (_subString, key: string, value: string) => {\r\n    const newText = transformFunction(key, value);\r\n    return createNoteEntity(key, newText);\r\n  });\r\n};\r\n\r\nexport const getNoteValue = (\r\n  note: string,\r\n  targetKey: string\r\n): string | undefined => {\r\n  const regex = makeRegex();\r\n  let match: RegExpExecArray | null;\r\n\r\n  while ((match = regex.exec(note)) !== null) {\r\n    if (match[1] === targetKey) {\r\n      return match[2];\r\n    }\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport const setNoteValue = (\r\n  note: string,\r\n  targetKey: string,\r\n  newValue: string\r\n): string => {\r\n  const regex = makeRegex();\r\n\r\n  return note.replace(regex, (match, key: string) => {\r\n    if (key === targetKey) {\r\n      return createNoteEntity(key, newValue); // 対象キーの場合のみ値を差し替え\r\n    }\r\n    return match; // 対象外はそのまま\r\n  });\r\n};\r\n","import type { EventCode } from \"@sigureya/rpgtypes\";\r\n\r\nexport const codeInfoText = (code: EventCode) => {\r\n  return `code:${code}`;\r\n};\r\n","export const ACTOR = \"N\" as const;\r\nexport const VARIABLE = \"V\" as const;\r\n","import type { Data_Actor, Data_System } from \"@sigureya/rpgtypes\";\r\nimport { ACTOR, VARIABLE } from \"./constants\";\r\nimport type { ControlCharInfo, ControlChars } from \"./types\";\r\n\r\nexport const createControlCharFormat = <C extends ControlChars>(\r\n  char: C,\r\n  id: number\r\n) => {\r\n  return `\\\\${char}[${id}]` as const;\r\n};\r\n\r\nexport const fromActor = (actor: Data_Actor) => {\r\n  return createControlCharFormat(ACTOR, actor.id);\r\n};\r\n\r\nexport const fromActors = (\r\n  actors: ReadonlyArray<Data_Actor>\r\n): ControlCharInfo[] => {\r\n  return actors.map<ControlCharInfo>((actor) => ({\r\n    controlChar: fromActor(actor),\r\n    text: actor.name,\r\n  }));\r\n};\r\nexport const fromSystem = (system: Data_System): ControlCharInfo[] => {\r\n  return system.variables\r\n    .map<ControlCharInfo>((name, index) => ({\r\n      text: name || \"\",\r\n      controlChar: createControlCharFormat(VARIABLE, index),\r\n    }))\r\n    .filter((pair) => pair.text !== \"\");\r\n};\r\n","export interface ControlChar {\r\n  char: string; // 制御文字\r\n  id: number; // 数字部分\r\n}\r\n\r\nconst defaultSet: ReadonlySet<Lowercase<string>> = new Set([\r\n  \"px\",\r\n  \"py\",\r\n  \"x\",\r\n  \"y\",\r\n  \"v\",\r\n  \"n\",\r\n  \"p\",\r\n  \"g\",\r\n  \"c\",\r\n  \"i\",\r\n  \"fs\",\r\n]);\r\n\r\n/**\r\n * 指定されたテキストから制御文字を抽出し、ControlChar配列として返します。\r\n * 制御文字の形式: \\(文字)[数字]\r\n * 文字の大文字小文字を区別しない。\r\n */\r\nexport const getControlChars = (\r\n  text: string,\r\n  validChars: ReadonlySet<Lowercase<string>> = defaultSet\r\n): ControlChar[] => {\r\n  // 正規表現: \\(制御文字)[数字]\r\n  const regex = /\\\\([A-Za-z]+)\\[(\\d+)]/g;\r\n\r\n  const controlChars: ControlChar[] = [];\r\n  let match: RegExpExecArray | null;\r\n\r\n  while ((match = regex.exec(text)) !== null) {\r\n    const char = match[1].toLowerCase() as Lowercase<string>;\r\n    const id = parseInt(match[2], 10);\r\n\r\n    if (validChars.has(char)) {\r\n      controlChars.push({ char: match[1], id }); // 大文字小文字区別しないが元の文字を保持\r\n    }\r\n  }\r\n\r\n  return controlChars;\r\n};\r\n","import type { PickByType } from \"@sigureya/rpgtypes\";\r\n\r\nexport type PickableRecordType<T, Value> = Record<\r\n  string & keyof PickByType<T, Value>,\r\n  Value\r\n>;\r\n\r\nexport const pickPropertys = <\r\n  Result,\r\n  Value,\r\n  T extends PickableRecordType<T, Value>\r\n>(\r\n  data: T,\r\n  keyList: ReadonlyArray<keyof PickableRecordType<T, string>>,\r\n  fn: (key: string, value: Value, data: T) => Result\r\n): Result[] => {\r\n  return keyList.map((key) => fn(key, data[key], data));\r\n};\r\n\r\nexport const pickString = <Result, T extends PickableRecordType<T, string>>(\r\n  data: T,\r\n  keyList: ReadonlyArray<keyof PickableRecordType<T, string>>,\r\n  fn: (key: string, value: string, data: T) => Result\r\n): Result[] => {\r\n  return pickPropertys(data, keyList, fn);\r\n};\r\n","import type {\r\n  RegularParamLabels,\r\n  ExtraParamLabels,\r\n  SpecialParamLabels,\r\n} from \"@sigureya/rpgtypes\";\r\nimport {\r\n  REGULAR_PARAM_AGI,\r\n  REGULAR_PARAM_ATK,\r\n  REGULAR_PARAM_DEF,\r\n  REGULAR_PARAM_LUK,\r\n  REGULAR_PARAM_MATK,\r\n  REGULAR_PARAM_MAX_HP,\r\n  REGULAR_PARAM_MAX_MP,\r\n  REGULAR_PARAM_MDEF,\r\n  EXTRA_PARAM_CEV,\r\n  EXTRA_PARAM_EVA,\r\n  EXTRA_PARAM_CNT,\r\n  EXTRA_PARAM_CRI,\r\n  EXTRA_PARAM_HIT,\r\n  EXTRA_PARAM_HRG,\r\n  EXTRA_PARAM_MEV,\r\n  EXTRA_PARAM_MRF,\r\n  EXTRA_PARAM_MRG,\r\n  EXTRA_PARAM_TRG,\r\n  SPECIAL_PARAM_EXR,\r\n  SPECIAL_PARAM_TGR,\r\n  SPECIAL_PARAM_FDR,\r\n  SPECIAL_PARAM_GRD,\r\n  SPECIAL_PARAM_MCR,\r\n  SPECIAL_PARAM_TCR,\r\n  SPECIAL_PARAM_PDR,\r\n  SPECIAL_PARAM_MDR,\r\n  SPECIAL_PARAM_PHA,\r\n  SPECIAL_PARAM_REC,\r\n} from \"@sigureya/rpgtypes\";\r\n\r\nexport const regularParamName = (\r\n  paramIndex: number,\r\n  labels: RegularParamLabels\r\n): string => {\r\n  switch (paramIndex) {\r\n    case REGULAR_PARAM_MAX_HP:\r\n      return labels.maxHp;\r\n    case REGULAR_PARAM_MAX_MP:\r\n      return labels.maxMp;\r\n    case REGULAR_PARAM_ATK:\r\n      return labels.atk;\r\n    case REGULAR_PARAM_DEF:\r\n      return labels.def;\r\n    case REGULAR_PARAM_MATK:\r\n      return labels.matk;\r\n    case REGULAR_PARAM_MDEF:\r\n      return labels.mdef;\r\n    case REGULAR_PARAM_AGI:\r\n      return labels.agi;\r\n    case REGULAR_PARAM_LUK:\r\n      return labels.luk;\r\n    default:\r\n      return `?rparams[${paramIndex}]`;\r\n  }\r\n};\r\n\r\nexport const extraParamName = (\r\n  paramIndex: number,\r\n  labels: ExtraParamLabels\r\n): string => {\r\n  switch (paramIndex) {\r\n    case EXTRA_PARAM_CEV:\r\n      return labels.criticalEvasionRate;\r\n    case EXTRA_PARAM_EVA:\r\n      return labels.evasionRate;\r\n    case EXTRA_PARAM_CNT:\r\n      return labels.counterAttackRate;\r\n    case EXTRA_PARAM_CRI:\r\n      return labels.criticalRate;\r\n    case EXTRA_PARAM_HIT:\r\n      return labels.hitRate;\r\n    case EXTRA_PARAM_HRG:\r\n      return labels.hpRegenerationRate;\r\n    case EXTRA_PARAM_MEV:\r\n      return labels.magicEvasionRate;\r\n    case EXTRA_PARAM_MRF:\r\n      return labels.magicReflectionRate;\r\n    case EXTRA_PARAM_MRG:\r\n      return labels.mpRegenerationRate;\r\n    case EXTRA_PARAM_TRG:\r\n      return labels.tpRegenerationRate;\r\n  }\r\n  return `?xparams[${paramIndex}]`;\r\n};\r\n\r\nexport const specialParamName = (\r\n  paramIndex: number,\r\n  labels: SpecialParamLabels\r\n): string => {\r\n  switch (paramIndex) {\r\n    case SPECIAL_PARAM_EXR:\r\n      return labels.experienceRate;\r\n    case SPECIAL_PARAM_TGR:\r\n      return labels.targetRate;\r\n    case SPECIAL_PARAM_FDR:\r\n      return labels.floorDamageRate;\r\n    case SPECIAL_PARAM_GRD:\r\n      return labels.guradEffectRate;\r\n    case SPECIAL_PARAM_MCR:\r\n      return labels.mpCostRate;\r\n    case SPECIAL_PARAM_TCR:\r\n      return labels.tpChargeRate;\r\n    case SPECIAL_PARAM_PDR:\r\n      return labels.physicalDamageRate;\r\n    case SPECIAL_PARAM_MDR:\r\n      return labels.magicDamageRate;\r\n    case SPECIAL_PARAM_PHA:\r\n      return labels.pharmacology;\r\n    case SPECIAL_PARAM_REC:\r\n      return labels.recoveryEffectRate;\r\n  }\r\n  return `?sparams[${paramIndex}]`;\r\n};\r\n","import type {\r\n  CollapsOptionLabels,\r\n  Data_NamedItem,\r\n  ExtraParamLabels,\r\n  PartyAbilityOptionLabels,\r\n  SpecialParamLabels,\r\n  GlobalLabel,\r\n  RegularParamLabels,\r\n} from \"@sigureya/rpgtypes\";\r\nimport {\r\n  COLLAPS_NORMAL,\r\n  COLLAPS_BOSS,\r\n  COLLAPS_INSTANT,\r\n  COLLAPS_NONE,\r\n  PARTY_ABILITY_CANCEL_SURPRISE,\r\n  PARTY_ABILITY_DROP_ITEM_DOUBLE,\r\n  PARTY_ABILITY_ENCOUNTER_HALF,\r\n  PARTY_ABILITY_ENCOUNTER_NONE,\r\n  PARTY_ABILITY_GOLD_DOUBLE,\r\n  PARTY_ABILITY_RAISE_PREEMPTIVE,\r\n  EXTRA_PARAM_TRG,\r\n  EXTRA_PARAM_CEV,\r\n  EXTRA_PARAM_CNT,\r\n  EXTRA_PARAM_CRI,\r\n  EXTRA_PARAM_EVA,\r\n  EXTRA_PARAM_HIT,\r\n  EXTRA_PARAM_HRG,\r\n  EXTRA_PARAM_MEV,\r\n  EXTRA_PARAM_MRF,\r\n  EXTRA_PARAM_MRG,\r\n  SPECIAL_PARAM_EXR,\r\n  SPECIAL_PARAM_FDR,\r\n  SPECIAL_PARAM_GRD,\r\n  SPECIAL_PARAM_MCR,\r\n  SPECIAL_PARAM_MDR,\r\n  SPECIAL_PARAM_PDR,\r\n  SPECIAL_PARAM_PHA,\r\n  SPECIAL_PARAM_REC,\r\n  SPECIAL_PARAM_TCR,\r\n  SPECIAL_PARAM_TGR,\r\n  REGULAR_PARAM_ATK,\r\n  REGULAR_PARAM_MAX_HP,\r\n  REGULAR_PARAM_MAX_MP,\r\n  REGULAR_PARAM_DEF,\r\n  REGULAR_PARAM_MATK,\r\n  REGULAR_PARAM_MDEF,\r\n  REGULAR_PARAM_AGI,\r\n  REGULAR_PARAM_LUK,\r\n} from \"@sigureya/rpgtypes\";\r\n\r\nexport const foldCollapsOptions = (\r\n  options: CollapsOptionLabels,\r\n  global: Pick<GlobalLabel, \"normal\">\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: COLLAPS_NORMAL,\r\n      name: global.normal,\r\n    },\r\n    {\r\n      id: COLLAPS_BOSS,\r\n      name: options.bossCollaps,\r\n    },\r\n    {\r\n      id: COLLAPS_INSTANT,\r\n      name: options.instantCollaps,\r\n    },\r\n    {\r\n      id: COLLAPS_NONE,\r\n      name: options.noneCollaps,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const foldPartyAbilityOptions = (\r\n  options: PartyAbilityOptionLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: PARTY_ABILITY_ENCOUNTER_HALF,\r\n      name: options.encounterHalf,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_ENCOUNTER_NONE,\r\n      name: options.encounterNone,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_CANCEL_SURPRISE,\r\n      name: options.cancelSurprise,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_RAISE_PREEMPTIVE,\r\n      name: options.raisePreemptive,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_GOLD_DOUBLE,\r\n      name: options.goldDouble,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_DROP_ITEM_DOUBLE,\r\n      name: options.dropItemDouble,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const foldRegularParam = (\r\n  param: RegularParamLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    { id: REGULAR_PARAM_MAX_HP, name: param.maxHp },\r\n    { id: REGULAR_PARAM_MAX_MP, name: param.maxMp },\r\n    { id: REGULAR_PARAM_ATK, name: param.atk },\r\n    { id: REGULAR_PARAM_DEF, name: param.def },\r\n    { id: REGULAR_PARAM_MATK, name: param.matk },\r\n    { id: REGULAR_PARAM_MDEF, name: param.mdef },\r\n    { id: REGULAR_PARAM_AGI, name: param.agi },\r\n    { id: REGULAR_PARAM_LUK, name: param.luk },\r\n  ];\r\n};\r\n\r\nexport const foldXParam = (xparam: ExtraParamLabels): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: EXTRA_PARAM_HIT,\r\n      name: xparam.hitRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_EVA,\r\n      name: xparam.evasionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_CRI,\r\n      name: xparam.criticalRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_CEV,\r\n      name: xparam.criticalEvasionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_MEV,\r\n      name: xparam.magicEvasionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_MRF,\r\n      name: xparam.magicReflectionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_CNT,\r\n      name: xparam.counterAttackRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_HRG,\r\n      name: xparam.hpRegenerationRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_MRG,\r\n      name: xparam.mpRegenerationRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_TRG,\r\n      name: xparam.tpRegenerationRate,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const foldSpecialParams = (\r\n  specialParams: SpecialParamLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: SPECIAL_PARAM_TGR,\r\n      name: specialParams.targetRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_GRD,\r\n      name: specialParams.guradEffectRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_REC,\r\n      name: specialParams.recoveryEffectRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_PHA,\r\n      name: specialParams.pharmacology,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_MCR,\r\n      name: specialParams.mpCostRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_TCR,\r\n      name: specialParams.tpChargeRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_PDR,\r\n      name: specialParams.physicalDamageRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_MDR,\r\n      name: specialParams.magicDamageRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_FDR,\r\n      name: specialParams.floorDamageRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_EXR,\r\n      name: specialParams.experienceRate,\r\n    },\r\n  ];\r\n};\r\n"],"names":["constructParamArray","constructActor","proto","constructEnemy","constructArmor","constructWeapon","constructDamage","constructClass","constructItem","constructSkill","constructState","createMap","createMapEvent","arg","createEventPage","createCondtion","createMapEventImage","createAudio","audio","createAudioCommand","code","name","indent","createSystemData","system","createTerms","createAdvanced","createSystemSoundsArray","createVehicle","createMessages","createCommandsArray","createParamNamesArray","createBasicTerms","names","codeTest","command","ERROR_COMMAND_MESSAGE","ERROR_COMMAND_SCRIPT","ERROR_INVALID_HEAD","isBodyParams","param","isHeadCommand","pickCommands","arrya","start","result","pickHead","commands","index","head","pickComments","array","COMMENT","COMMENT_BODY","pickScripts","SCRIPT_EVAL","SCRIPT_EVAL_BODY","pickMessageHeader","isMessageHeader","SHOW_MESSAGE","pickMessageWithHead","SHOW_MESSAGE_BODY","ERROR_MESSAGE","pickScrollTextHeader","cmd","SHOW_SCROLLING_TEXT","error","SHOW_SCROLLING_TEXT_BODY","pickScrollText","joinCommandBodies","sepadrator","v","BaseEventCommandGroup","header","bodies","separator","SimpleEventCommandGroup","bodyCode","headder","CombinedEventCommandGroup","CHOICE_HELP_TEXT","isChoiceHelp","createMessageGroup","hedder","createScrlloingTextGroup","createCommentGroup","createScriptGroup","handleGroupMessage","func","pair","group","handleGroupScrollingText","handleGroupComment","handleGroupScript","groop","handlerDispatch","table","SHOW_CHOICES","SHOW_CHOICES_ITEM","CHANGE_NAME","CHANGE_PROFILE","CHANGE_NICKNAME","mapTextCommand","list","callHandler","handler","fallback","mappingCommandList","mappingCommand","flatMappingCommandList","Code","groupJoinMapper","data","normalizedCommands","isValidEvent","event","createEventContext","eventId","pageIndex","createCommandContext","page","processEventPages","container","processMapEvents","map","fn","collectMapEvents","processTroopEvents","troop","processCommonEvents","events","common","gatherEventCommandContext","replaceEventCommands","newList","replacePages","replaceMapEvents","replaceCommonEvents","commonEvent","replaceTroops","normalizedMapData","normalizedCommonEvents","commonEvents","normalizedTroops","troops","matchesEventCommand","codeList","isAudioCommand","AUDIO_CODE","RpgTypes","isImageCommand","IMAGE_CODE","pickCommandParamString","pickCommandParamNumber","pickCommandParamAudio","createEventCommand","createNoteEntity","key","value","makeRegex","readNoteObject","readNoteEx","readNote","note","regex","match","replaceNote","transformFunction","_subString","newText","getNoteValue","targetKey","setNoteValue","newValue","codeInfoText","ACTOR","VARIABLE","createControlCharFormat","char","id","fromActor","actor","fromActors","actors","fromSystem","defaultSet","getControlChars","text","validChars","controlChars","pickPropertys","keyList","pickString","regularParamName","paramIndex","labels","REGULAR_PARAM_MAX_HP","REGULAR_PARAM_MAX_MP","REGULAR_PARAM_ATK","REGULAR_PARAM_DEF","REGULAR_PARAM_MATK","REGULAR_PARAM_MDEF","REGULAR_PARAM_AGI","REGULAR_PARAM_LUK","extraParamName","EXTRA_PARAM_CEV","EXTRA_PARAM_EVA","EXTRA_PARAM_CNT","EXTRA_PARAM_CRI","EXTRA_PARAM_HIT","EXTRA_PARAM_HRG","EXTRA_PARAM_MEV","EXTRA_PARAM_MRF","EXTRA_PARAM_MRG","EXTRA_PARAM_TRG","specialParamName","SPECIAL_PARAM_EXR","SPECIAL_PARAM_TGR","SPECIAL_PARAM_FDR","SPECIAL_PARAM_GRD","SPECIAL_PARAM_MCR","SPECIAL_PARAM_TCR","SPECIAL_PARAM_PDR","SPECIAL_PARAM_MDR","SPECIAL_PARAM_PHA","SPECIAL_PARAM_REC","foldCollapsOptions","options","global","COLLAPS_NORMAL","COLLAPS_BOSS","COLLAPS_INSTANT","COLLAPS_NONE","foldPartyAbilityOptions","PARTY_ABILITY_ENCOUNTER_HALF","PARTY_ABILITY_ENCOUNTER_NONE","PARTY_ABILITY_CANCEL_SURPRISE","PARTY_ABILITY_RAISE_PREEMPTIVE","PARTY_ABILITY_GOLD_DOUBLE","PARTY_ABILITY_DROP_ITEM_DOUBLE","foldRegularParam","foldXParam","xparam","foldSpecialParams","specialParams"],"mappings":"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"}