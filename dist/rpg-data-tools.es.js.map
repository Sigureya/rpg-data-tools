{"version":3,"file":"rpg-data-tools.es.js","sources":["../src/constructData/mainData.ts","../src/constructData/map.ts","../src/constructData/audio/createAudio.ts","../src/constructData/systemData.ts","../src/commandMapper/commandProxy/showMessage.ts","../src/commandMapper/message.ts","../src/format/note/note.ts","../src/format/codeInfoText.ts","../src/format/controlChars/constants.ts","../src/format/controlChars/controlChars.ts","../src/format/controlChars/getContolChars.ts","../src/utils/pickPropety.ts"],"sourcesContent":["import type {\r\n  Data_Actor,\r\n  Data_Enemy,\r\n  Data_Weapon,\r\n  Data_Armor,\r\n  Data_Class,\r\n  Data_Skill,\r\n  Data_Item,\r\n  Data_State,\r\n  ParamArray,\r\n} from \"@sigureya/rpgtypes\";\r\n\r\nexport const constructParamArray = (): ParamArray => {\r\n  return [0, 0, 0, 0, 0, 0, 0, 0];\r\n};\r\n\r\nexport const constructActor = (proto?: Partial<Data_Actor>): Data_Actor => {\r\n  return {\r\n    id: 0,\r\n    name: \"\",\r\n    nickname: \"\",\r\n    profile: \"\",\r\n    note: \"\",\r\n    classId: 0,\r\n    initialLevel: 1,\r\n    maxLevel: 99,\r\n    characterIndex: 0,\r\n    characterName: \"\",\r\n    faceIndex: 0,\r\n    faceName: \"\",\r\n    battlerName: \"\",\r\n    traits: [],\r\n    equips: [],\r\n    ...proto,\r\n  };\r\n};\r\n\r\nexport const constructEnemy = (proto?: Partial<Data_Enemy>): Data_Enemy => {\r\n  return {\r\n    battlerHue: 0,\r\n    id: 0,\r\n    name: \"\",\r\n    note: \"\",\r\n    battlerName: \"\",\r\n    traits: [],\r\n    params: constructParamArray(),\r\n    exp: 0,\r\n    gold: 0,\r\n    dropItems: [],\r\n    actions: [],\r\n\r\n    ...proto,\r\n  };\r\n};\r\n\r\nexport const constructArmor = (proto?: Partial<Data_Armor>): Data_Armor => {\r\n  return {\r\n    price: 0,\r\n    id: 0,\r\n    name: \"\",\r\n    note: \"\",\r\n    iconIndex: 0,\r\n    description: \"\",\r\n    etypeId: 0,\r\n    params: constructParamArray(),\r\n    traits: [],\r\n\r\n    ...proto,\r\n  };\r\n};\r\nexport const constructWeapon = (proto?: Partial<Data_Weapon>): Data_Weapon => {\r\n  return {\r\n    price: 0,\r\n    id: 0,\r\n    name: \"\",\r\n    note: \"\",\r\n    iconIndex: 0,\r\n    description: \"\",\r\n    etypeId: 0,\r\n    wtypeId: 0,\r\n    params: constructParamArray(),\r\n    traits: [],\r\n    damage: constructDamage(),\r\n\r\n    ...proto,\r\n  };\r\n};\r\n\r\nexport const constructClass = (proto?: Partial<Data_Class>): Data_Class => {\r\n  return {\r\n    id: 0,\r\n    name: \"\",\r\n    note: \"\",\r\n    traits: [],\r\n    learnings: [],\r\n    params: constructParamArray(),\r\n    expParams: [],\r\n    ...proto,\r\n  };\r\n};\r\n\r\nexport const constructDamage = (\r\n  proto?: Partial<Data_Skill[\"damage\"]>\r\n): Data_Skill[\"damage\"] => {\r\n  return {\r\n    type: 0,\r\n    elementId: 0,\r\n    formula: \"0\",\r\n    variance: 20,\r\n    critical: false,\r\n    ...proto,\r\n  };\r\n};\r\n\r\nexport const constructItem = (proto?: Partial<Data_Item>): Data_Item => {\r\n  return {\r\n    id: 0,\r\n    name: \"\",\r\n    iconIndex: 0,\r\n    description: \"\",\r\n    note: \"\",\r\n    price: 0,\r\n    consumable: false,\r\n    scope: 0,\r\n    occasion: 0,\r\n    speed: 0,\r\n    successRate: 100,\r\n    repeats: 1,\r\n    tpGain: 0,\r\n    hitType: 0,\r\n    animationId: 0,\r\n    damage: constructDamage(),\r\n    effects: [],\r\n    ...proto,\r\n  };\r\n};\r\n\r\nexport const constructSkill = (proto?: Partial<Data_Skill>): Data_Skill => {\r\n  return {\r\n    animationId: 0,\r\n    damage: constructDamage(),\r\n    description: \"\",\r\n    hitType: 0,\r\n    iconIndex: 0,\r\n    id: 0,\r\n    message1: \"\",\r\n    message2: \"\",\r\n    mpCost: 0,\r\n    name: \"\",\r\n    note: \"\",\r\n    occasion: 0,\r\n    repeats: 1,\r\n    requiredWtypeId1: 0,\r\n    requiredWtypeId2: 0,\r\n    scope: 0,\r\n    speed: 0,\r\n    stypeId: 0,\r\n    successRate: 100,\r\n    tpCost: 0,\r\n    tpGain: 0,\r\n    effects: [],\r\n    messageType: 0,\r\n\r\n    ...proto,\r\n  };\r\n};\r\n\r\nexport const constructState = (proto?: Partial<Data_State>): Data_State => {\r\n  return {\r\n    id: 0,\r\n    name: \"\",\r\n    iconIndex: 0,\r\n    restriction: 0,\r\n    priority: 50,\r\n    motion: 0,\r\n    overlay: 0,\r\n    removeAtBattleEnd: false,\r\n    removeByRestriction: false,\r\n    autoRemovalTiming: 0,\r\n    minTurns: 1,\r\n    maxTurns: 1,\r\n    removeByDamage: false,\r\n    chanceByDamage: 100,\r\n    removeByWalking: false,\r\n    stepsToRemove: 100,\r\n    message1: \"\",\r\n    message2: \"\",\r\n    message3: \"\",\r\n    message4: \"\",\r\n    traits: [],\r\n    note: \"\",\r\n    ...proto,\r\n  };\r\n};\r\n","import type { Data_Map, MapEvent } from \"@sigureya/rpgtypes\";\r\nimport type { MapEventPage } from \"@sigureya/rpgtypes\";\r\n\r\nexport const createMap = (\r\n  proto: {\r\n    bgm: Data_Map[\"bgm\"];\r\n    bgs: Data_Map[\"bgs\"];\r\n  } & Partial<Data_Map>\r\n): Data_Map => ({\r\n  autoplayBgm: true,\r\n  autoplayBgs: false,\r\n  battleback1Name: \"\",\r\n  battleback2Name: \"\",\r\n  data: [],\r\n  disableDashing: false,\r\n  displayName: \"\",\r\n  encounterList: [],\r\n  events: [],\r\n  height: 0,\r\n  note: \"\",\r\n  width: 0,\r\n  x: 0,\r\n  y: 0,\r\n  parallaxName: \"\",\r\n  parallaxLoopX: false,\r\n  parallaxLoopY: false,\r\n  parallaxShow: false,\r\n  parallaxSx: 0,\r\n  parallaxSy: 0,\r\n  ...proto,\r\n});\r\n\r\nexport const createMapEvent = (arg?: Partial<MapEvent>): MapEvent => ({\r\n  id: 0,\r\n  name: \"\",\r\n  note: \"\",\r\n  x: 0,\r\n  y: 0,\r\n  pages: [createEventPage()],\r\n  ...arg,\r\n});\r\n\r\nexport const createCondtion = (\r\n  arg?: Partial<MapEventPage[\"conditions\"]>\r\n): MapEventPage[\"conditions\"] => ({\r\n  actorId: 0,\r\n  actorValid: false,\r\n  itemId: 0,\r\n  itemValid: false,\r\n  selfSwitchCh: \"\",\r\n  selfSwitchValid: false,\r\n  switch1Id: 0,\r\n  switch1Valid: false,\r\n  switch2Id: 0,\r\n  switch2Valid: false,\r\n  variableId: 0,\r\n  variableValid: false,\r\n  variableValue: 0,\r\n  ...arg,\r\n});\r\n\r\nexport const createMapEventImage = (\r\n  arg?: Partial<MapEventPage[\"image\"]>\r\n): MapEventPage[\"image\"] => ({\r\n  characterIndex: 0,\r\n  characterName: \"\",\r\n  direction: 6,\r\n  pattern: 0,\r\n  tileId: 0,\r\n  ...arg,\r\n});\r\n\r\nexport const createEventPage = (arg?: Partial<MapEventPage>): MapEventPage => ({\r\n  conditions: createCondtion(),\r\n  image: createMapEventImage(),\r\n  moveRoute: {\r\n    list: [],\r\n    repeat: false,\r\n    wait: false,\r\n    skippable: false,\r\n  },\r\n  directionFix: false,\r\n  moveFrequency: 0,\r\n  list: [],\r\n  ...arg,\r\n});\r\n","import type { AudioFileParams } from \"@sigureya/rpgtypes\";\r\n\r\nexport const createAudio = (): AudioFileParams => {\r\n  return {\r\n    name: \"\",\r\n    pan: 0,\r\n    pitch: 100,\r\n    volume: 90,\r\n  };\r\n};\r\n","import type {\r\n  Data_System,\r\n  Terms_Messages,\r\n  System_Terms,\r\n  System_Advanced,\r\n  Data_Vehicle,\r\n  Terms_BasicArray,\r\n  Terms_ParamNamesArray,\r\n  Terms_CommandArray,\r\n  System_SoundsArray,\r\n} from \"@sigureya/rpgtypes\";\r\nimport type { SystemSounds } from \"./audio\";\r\nimport { createAudio } from \"./audio\";\r\nimport type { ParamTable } from \"./paramArray\";\r\nimport type { Terms_Commands, BasicTerms } from \"./types\";\r\n\r\nexport const createSystemData = (\r\n  system: Partial<Data_System> = {}\r\n): Data_System => ({\r\n  local: system.local ?? \"\",\r\n  gameTitle: system.gameTitle ?? \"\",\r\n  currencyUnit: system.currencyUnit ?? \"\",\r\n  title1Name: system.title1Name ?? \"\",\r\n  terms: system.terms ?? createTerms(),\r\n  title2Name: system.title2Name ?? \"\",\r\n  optAutosave: system.optAutosave ?? false,\r\n  attackMotions: system.attackMotions ?? [],\r\n  startMapId: system.startMapId ?? 0,\r\n  startX: system.startX ?? 0,\r\n  startY: system.startY ?? 0,\r\n  switches: system.switches ?? [],\r\n  windowTone: system.windowTone ?? [0, 0, 0, 0],\r\n  editMapId: system.editMapId ?? 0,\r\n  testTroopId: system.testTroopId ?? 0,\r\n  testBattlers: system.testBattlers ?? [],\r\n  versionId: system.versionId ?? 0,\r\n  advanced: system.advanced ?? createAdvanced(),\r\n  armorTypes: system.armorTypes ?? [],\r\n  elements: system.elements ?? [],\r\n  variables: system.variables ?? [],\r\n  equipTypes: system.equipTypes ?? [],\r\n  sounds: system.sounds ?? createSystemSoundsArray(),\r\n  titleBgm: system.titleBgm ?? createAudio(),\r\n  gameoverMe: system.gameoverMe ?? createAudio(),\r\n  battleBgm: system.battleBgm ?? createAudio(),\r\n  defeatMe: system.defeatMe ?? createAudio(),\r\n  victoryMe: system.victoryMe ?? createAudio(),\r\n  battleback1Name: system.battleback1Name ?? \"\",\r\n  battleback2Name: system.battleback2Name ?? \"\",\r\n  battlerName: system.battlerName ?? \"\",\r\n  weaponTypes: system.weaponTypes ?? [],\r\n  skillTypes: system.skillTypes ?? [],\r\n  optDisplayTp: system.optDisplayTp ?? false,\r\n  optDrawTitle: system.optDrawTitle ?? false,\r\n  optExtraExp: system.optExtraExp ?? false,\r\n  optFloorDeath: system.optFloorDeath ?? false,\r\n  optFollowers: system.optFollowers ?? false,\r\n  optKeyItemsNumber: system.optKeyItemsNumber ?? false,\r\n  optSideView: system.optSideView ?? false,\r\n  optSlipDeath: system.optSlipDeath ?? false,\r\n  optTransparent: system.optTransparent ?? false,\r\n  boat: system.boat ?? createVehicle(),\r\n  ship: system.ship ?? createVehicle(),\r\n  airship: system.airship ?? createVehicle(),\r\n  tileSize: system.tileSize ?? 0,\r\n});\r\n\r\nexport const createTerms = (\r\n  proto: {\r\n    messages?: Partial<Terms_Messages>;\r\n    commands?: Partial<Terms_Commands>;\r\n    params?: Partial<ParamTable<string>>;\r\n    basic?: Partial<BasicTerms>;\r\n  } = {}\r\n): System_Terms => ({\r\n  messages: createMessages(proto.messages ?? {}),\r\n  commands: createCommandsArray(proto.commands ?? {}),\r\n  params: createParamNamesArray(proto.params ?? {}),\r\n  basic: createBasicTerms(proto.basic ?? {}),\r\n});\r\n\r\nexport const createBasicTerms = (\r\n  proto: Partial<BasicTerms> = {}\r\n): Terms_BasicArray => [\r\n  proto.level ?? \"\",\r\n  proto.levelA ?? \"\",\r\n  proto.hp ?? \"\",\r\n  proto.hpA ?? \"\",\r\n  proto.mp ?? \"\",\r\n  proto.mpA ?? \"\",\r\n  proto.tp ?? \"\",\r\n  proto.tpA ?? \"\",\r\n  proto.experience ?? \"\",\r\n  proto.exp ?? \"\",\r\n];\r\n\r\nexport const createParamNamesArray = (\r\n  names: Partial<ParamTable<string>> = {}\r\n): Terms_ParamNamesArray => [\r\n  names.mhp ?? \"\",\r\n  names.mmp ?? \"\",\r\n  names.atk ?? \"\",\r\n  names.def ?? \"\",\r\n  names.mat ?? \"\",\r\n  names.mdf ?? \"\",\r\n  names.agi ?? \"\",\r\n  names.luk ?? \"\",\r\n  names.hit ?? \"\",\r\n  names.eva ?? \"\",\r\n];\r\n\r\nexport const createCommandsArray = (\r\n  proto: Partial<Terms_Commands> = {}\r\n): Terms_CommandArray => [\r\n  proto.fight ?? \"\",\r\n  proto.escape ?? \"\",\r\n  proto.attack ?? \"\",\r\n  proto.guard ?? \"\",\r\n  proto.item ?? \"\",\r\n  proto.skill ?? \"\",\r\n  proto.equip ?? \"\",\r\n  proto.status ?? \"\",\r\n  proto.formation ?? \"\",\r\n  proto.save ?? \"\",\r\n  proto.gameEnd ?? \"\",\r\n  proto.options ?? \"\",\r\n  proto.weapon ?? \"\",\r\n  proto.armor ?? \"\",\r\n  proto.keyItem ?? \"\",\r\n  proto.equip2 ?? \"\",\r\n  proto.optimize ?? \"\",\r\n  proto.clear ?? \"\",\r\n  proto.newGame ?? \"\",\r\n  proto.continue_ ?? \"\",\r\n  proto.notUsed20 ?? \"\",\r\n  proto.toTitle ?? \"\",\r\n  proto.cancel ?? \"\",\r\n  proto.notUsed23 ?? \"\",\r\n  proto.buy ?? \"\",\r\n  proto.sell ?? \"\",\r\n];\r\n\r\nexport const createMessages = (\r\n  proto: Partial<Terms_Messages> = {}\r\n): Terms_Messages => ({\r\n  alwaysDash: proto.alwaysDash ?? \"\",\r\n  commandRemember: proto.commandRemember ?? \"\",\r\n  touchUI: proto.touchUI ?? \"\",\r\n  bgmVolume: proto.bgmVolume ?? \"\",\r\n  bgsVolume: proto.bgsVolume ?? \"\",\r\n  meVolume: proto.meVolume ?? \"\",\r\n  seVolume: proto.seVolume ?? \"\",\r\n  possession: proto.possession ?? \"\",\r\n  expTotal: proto.expTotal ?? \"\",\r\n  expNext: proto.expNext ?? \"\",\r\n  saveMessage: proto.saveMessage ?? \"\",\r\n  loadMessage: proto.loadMessage ?? \"\",\r\n  file: proto.file ?? \"\",\r\n  autosave: proto.autosave ?? \"\",\r\n  partyName: proto.partyName ?? \"\",\r\n  emerge: proto.emerge ?? \"\",\r\n  preemptive: proto.preemptive ?? \"\",\r\n  surprise: proto.surprise ?? \"\",\r\n  escapeStart: proto.escapeStart ?? \"\",\r\n  escapeFailure: proto.escapeFailure ?? \"\",\r\n  victory: proto.victory ?? \"\",\r\n  defeat: proto.defeat ?? \"\",\r\n  obtainExp: proto.obtainExp ?? \"\",\r\n  obtainGold: proto.obtainGold ?? \"\",\r\n  obtainItem: proto.obtainItem ?? \"\",\r\n  levelUp: proto.levelUp ?? \"\",\r\n  obtainSkill: proto.obtainSkill ?? \"\",\r\n  useItem: proto.useItem ?? \"\",\r\n  criticalToEnemy: proto.criticalToEnemy ?? \"\",\r\n  criticalToActor: proto.criticalToActor ?? \"\",\r\n  actorDamage: proto.actorDamage ?? \"\",\r\n  actorRecovery: proto.actorRecovery ?? \"\",\r\n  actorGain: proto.actorGain ?? \"\",\r\n  actorLoss: proto.actorLoss ?? \"\",\r\n  actorDrain: proto.actorDrain ?? \"\",\r\n  actorNoDamage: proto.actorNoDamage ?? \"\",\r\n  actorNoHit: proto.actorNoHit ?? \"\",\r\n  enemyDamage: proto.enemyDamage ?? \"\",\r\n  enemyRecovery: proto.enemyRecovery ?? \"\",\r\n  enemyGain: proto.enemyGain ?? \"\",\r\n  enemyLoss: proto.enemyLoss ?? \"\",\r\n  enemyDrain: proto.enemyDrain ?? \"\",\r\n  enemyNoDamage: proto.enemyNoDamage ?? \"\",\r\n  enemyNoHit: proto.enemyNoHit ?? \"\",\r\n  evasion: proto.evasion ?? \"\",\r\n  magicEvasion: proto.magicEvasion ?? \"\",\r\n  magicReflection: proto.magicReflection ?? \"\",\r\n  counterAttack: proto.counterAttack ?? \"\",\r\n  substitute: proto.substitute ?? \"\",\r\n  buffAdd: proto.buffAdd ?? \"\",\r\n  debuffAdd: proto.debuffAdd ?? \"\",\r\n  buffRemove: proto.buffRemove ?? \"\",\r\n  actionFailure: proto.actionFailure ?? \"\",\r\n});\r\nexport const createAdvanced = (\r\n  proto: Partial<System_Advanced> = {}\r\n): System_Advanced => ({\r\n  gameId: proto.gameId ?? 0,\r\n  screenWidth: proto.screenWidth ?? 0,\r\n  screenHeight: proto.screenHeight ?? 0,\r\n  uiAreaWidth: proto.uiAreaWidth ?? 0,\r\n  uiAreaHeight: proto.uiAreaHeight ?? 0,\r\n  windowOpacity: proto.windowOpacity ?? 0,\r\n  screenScale: proto.screenScale ?? 0,\r\n  numberFontFilename: proto.numberFontFilename ?? \"\",\r\n  mainFontFilename: proto.mainFontFilename ?? \"\",\r\n  fallbackFonts: proto.fallbackFonts ?? \"\",\r\n  fontSize: proto.fontSize ?? 0,\r\n});\r\n\r\nexport const createVehicle = (\r\n  proto: Partial<Data_Vehicle> = {}\r\n): Data_Vehicle => ({\r\n  bgm: proto.bgm ?? createAudio(),\r\n  characterIndex: proto.characterIndex ?? 0,\r\n  characterName: proto.characterName ?? \"\",\r\n  startMapId: proto.startMapId ?? 0,\r\n  startX: proto.startX ?? 0,\r\n  startY: proto.startY ?? 0,\r\n});\r\n\r\nexport const createSystemSoundsArray = (\r\n  proto: Partial<SystemSounds> = {}\r\n): System_SoundsArray => [\r\n  proto.cursor ?? createAudio(),\r\n  proto.ok ?? createAudio(),\r\n  proto.cancel ?? createAudio(),\r\n  proto.buzzer ?? createAudio(),\r\n  proto.equip ?? createAudio(),\r\n  proto.save ?? createAudio(),\r\n  proto.load ?? createAudio(),\r\n  proto.battleStart ?? createAudio(),\r\n  proto.escape ?? createAudio(),\r\n  proto.enemyAttack ?? createAudio(),\r\n  proto.enemyDamage ?? createAudio(),\r\n  proto.enemyCollapse ?? createAudio(),\r\n  proto.bossCollapse1 ?? createAudio(),\r\n  proto.bossCollapse2 ?? createAudio(),\r\n  proto.actorDamage ?? createAudio(),\r\n  proto.actorCollapse ?? createAudio(),\r\n  proto.playRecovery ?? createAudio(),\r\n  proto.playMiss ?? createAudio(),\r\n  proto.playEvasion ?? createAudio(),\r\n  proto.playMagicEvasion ?? createAudio(),\r\n  proto.playReflection ?? createAudio(),\r\n  proto.shop ?? createAudio(),\r\n  proto.useItem ?? createAudio(),\r\n  proto.useSkill ?? createAudio(),\r\n];\r\n","import type { EventCommand, EventCommandTable } from \"@sigureya/rpgtypes\";\r\n\r\nexport class MessageProxy {\r\n  constructor(\r\n    public readonly command: Readonly<EventCommandTable[\"SHOW_MESSAGE\"]>,\r\n    private index: number,\r\n    private array: ReadonlyArray<EventCommand>\r\n  ) {}\r\n  joinBody(sepadrator = \"\\n\"): string {\r\n    return this.body()\r\n      .map((v) => v.parameters[0])\r\n      .join(sepadrator);\r\n  }\r\n  body(): EventCommandTable[\"SHOW_MESSAGE_BODY\"][] {\r\n    const result: EventCommandTable[\"SHOW_MESSAGE_BODY\"][] = [];\r\n    for (let i = this.index + 1; i < this.array.length; i++) {\r\n      const command = this.array[i];\r\n      if (command.code === 401) {\r\n        result.push(command);\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  head(): EventCommandTable[\"SHOW_MESSAGE\"] {\r\n    return this.command;\r\n  }\r\n  speakerName(): string {\r\n    return this.command.parameters[4];\r\n  }\r\n}\r\n","import {\r\n  CHANGE_NAME,\r\n  CHANGE_NICKNAME,\r\n  CHANGE_PROFILE,\r\n  COMMENT_BODY,\r\n  SHOW_CHOICES,\r\n  SHOW_CHOICES_ITEM,\r\n  SHOW_MESSAGE,\r\n  SHOW_SCROLLING_TEXT,\r\n} from \"@sigureya/rpgtypes\";\r\nimport type { EventCommand, EventCommandTable } from \"@sigureya/rpgtypes\";\r\nimport { MessageProxy } from \"./commandProxy\";\r\n\r\ntype CallBackFunc<Command extends EventCommand, Reulst = void> = (\r\n  command: Readonly<Command>,\r\n  index: number,\r\n  list: ReadonlyArray<Readonly<EventCommand>>\r\n) => Reulst;\r\n\r\n// interface\r\ninterface Mapper<T> {\r\n  showMessage(proxy: MessageProxy): T;\r\n  showChoices: CallBackFunc<EventCommandTable[\"SHOW_CHOICES\"], T>;\r\n  showChoicesItem: CallBackFunc<EventCommandTable[\"SHOW_CHOICES_ITEM\"], T>;\r\n  showScrollingText: CallBackFunc<EventCommandTable[\"SHOW_SCROLLING_TEXT\"], T>;\r\n  changeName: CallBackFunc<EventCommandTable[\"CHANGE_NAME\"], T>;\r\n  changeProfile: CallBackFunc<EventCommandTable[\"CHANGE_PROFILE\"], T>;\r\n  changeNickname: CallBackFunc<EventCommandTable[\"CHANGE_NICKNAME\"], T>;\r\n  commentBody: CallBackFunc<EventCommandTable[\"COMMENT_BODY\"], T>;\r\n  other: CallBackFunc<EventCommand, T>;\r\n}\r\n\r\nexport const mapTextCommand = <T>(\r\n  list: ReadonlyArray<EventCommand>,\r\n  table: Mapper<T>\r\n) => {\r\n  return list.map<T>((command, index, array) => {\r\n    switch (command.code) {\r\n      case SHOW_MESSAGE:\r\n        return table.showMessage(new MessageProxy(command, index, array));\r\n      case SHOW_CHOICES:\r\n        return table.showChoices(command, index, array);\r\n      case SHOW_CHOICES_ITEM:\r\n        return table.showChoicesItem(command, index, array);\r\n      case SHOW_SCROLLING_TEXT:\r\n        return table.showScrollingText(command, index, array);\r\n      case CHANGE_NAME:\r\n        return table.changeName(command, index, array);\r\n      case CHANGE_PROFILE:\r\n        return table.changeProfile(command, index, array);\r\n      case CHANGE_NICKNAME:\r\n        return table.changeNickname(command, index, array);\r\n      case COMMENT_BODY:\r\n        return table.commentBody(command, index, array);\r\n\r\n      default:\r\n        return table.other(command, index, array);\r\n    }\r\n  });\r\n};\r\n","import type { ReadNoteOption, ReadResult } from \"./types\";\r\n\r\nexport const createNoteEntity = (key: string, value: string): string => {\r\n  return `<${key}:${value}>`;\r\n};\r\n\r\nexport const makeRegex = () => /<([^<>:]+):([^>]*)>/g;\r\n\r\n/**\r\n * note文字列を解析し、キーと値のペアを取得します。\r\n * タグが閉じられていない場合、その要素は無視されます。\r\n */\r\nexport const readNote = (\r\n  note: string,\r\n  options: Partial<ReadNoteOption> = {}\r\n): ReadResult[] => {\r\n  const opt: ReadNoteOption = {\r\n    prefix: \"\",\r\n    suffix: \"\",\r\n    ...options,\r\n  };\r\n\r\n  const regex = makeRegex();\r\n  const result: ReadResult[] = [];\r\n  let match: RegExpExecArray | null;\r\n\r\n  while ((match = regex.exec(note)) !== null) {\r\n    result.push([`${opt.prefix}${match[1]}${opt.suffix}`, match[2]]);\r\n  }\r\n  return result;\r\n};\r\n\r\n// 修正2: 引数名変更 dictionary → transformFunction\r\nexport const replaceNote = (\r\n  note: string,\r\n  transformFunction: (key: string, value: string) => string\r\n): string => {\r\n  return note.replace(makeRegex(), (_subString, key: string, value: string) => {\r\n    const newText = transformFunction(key, value);\r\n    return createNoteEntity(key, newText);\r\n  });\r\n};\r\n\r\n// 修正4: 特定のキーに対応するデータを取得する関数\r\nexport const getNoteValue = (\r\n  note: string,\r\n  targetKey: string\r\n): string | undefined => {\r\n  const regex = makeRegex();\r\n  let match: RegExpExecArray | null;\r\n\r\n  while ((match = regex.exec(note)) !== null) {\r\n    if (match[1] === targetKey) {\r\n      return match[2]; // 対応する値を返す\r\n    }\r\n  }\r\n  return undefined; // 見つからなかった場合\r\n};\r\n\r\n// 修正4: 特定のキーに対応する値を差し替える関数\r\nexport const setNoteValue = (\r\n  note: string,\r\n  targetKey: string,\r\n  newValue: string\r\n): string => {\r\n  const regex = makeRegex();\r\n\r\n  return note.replace(regex, (match, key: string, value: string) => {\r\n    if (key === targetKey) {\r\n      return createNoteEntity(key, newValue); // 対象キーの場合のみ値を差し替え\r\n    }\r\n    return match; // 対象外はそのまま\r\n  });\r\n};\r\n","import type { EventCode } from \"@sigureya/rpgtypes\";\r\n\r\nexport const codeInfoText = (code: EventCode) => {\r\n  return `code:${code}`;\r\n};\r\n","export const ACTOR = \"N\" as const;\r\nexport const VARIABLE = \"V\" as const;\r\n","import type { Data_Actor, Data_System } from \"@sigureya/rpgtypes\";\r\nimport { ACTOR, VARIABLE } from \"./constants\";\r\nimport type { ControlCharInfo, ControlChars } from \"./types\";\r\n\r\nexport const createControlCharFormat = <C extends ControlChars>(\r\n  char: C,\r\n  id: number\r\n) => {\r\n  return `\\\\${char}[${id}]` as const;\r\n};\r\n\r\nexport const fromActor = (actor: Data_Actor) => {\r\n  return createControlCharFormat(ACTOR, actor.id);\r\n};\r\n\r\nexport const fromActors = (\r\n  actors: ReadonlyArray<Data_Actor>\r\n): ControlCharInfo[] => {\r\n  return actors.map<ControlCharInfo>((actor) => ({\r\n    controlChar: fromActor(actor),\r\n    text: actor.name,\r\n  }));\r\n};\r\nexport const fromSystem = (system: Data_System): ControlCharInfo[] => {\r\n  return system.variables\r\n    .map<ControlCharInfo>((name, index) => ({\r\n      text: name || \"\",\r\n      controlChar: createControlCharFormat(VARIABLE, index),\r\n    }))\r\n    .filter((pair) => pair.text !== \"\");\r\n};\r\n","export interface ControlChar {\r\n  char: string; // 制御文字\r\n  id: number; // 数字部分\r\n}\r\n\r\nconst defaultSet: ReadonlySet<Lowercase<string>> = new Set([\r\n  \"px\",\r\n  \"py\",\r\n  \"x\",\r\n  \"y\",\r\n  \"v\",\r\n  \"n\",\r\n  \"p\",\r\n  \"g\",\r\n  \"c\",\r\n  \"i\",\r\n  \"fs\",\r\n]);\r\n\r\n/**\r\n * 指定されたテキストから制御文字を抽出し、ControlChar配列として返します。\r\n * 制御文字の形式: \\(文字)[数字]\r\n * 文字の大文字小文字を区別しない。\r\n */\r\nexport const getControlChars = (\r\n  text: string,\r\n  validChars: ReadonlySet<Lowercase<string>> = defaultSet\r\n): ControlChar[] => {\r\n  // 正規表現: \\(制御文字)[数字]\r\n  const regex = /\\\\([A-Za-z]+)\\[(\\d+)]/g;\r\n\r\n  const controlChars: ControlChar[] = [];\r\n  let match: RegExpExecArray | null;\r\n\r\n  while ((match = regex.exec(text)) !== null) {\r\n    const char = match[1].toLowerCase() as Lowercase<string>;\r\n    const id = parseInt(match[2], 10);\r\n\r\n    if (validChars.has(char)) {\r\n      controlChars.push({ char: match[1], id }); // 大文字小文字区別しないが元の文字を保持\r\n    }\r\n  }\r\n\r\n  return controlChars;\r\n};\r\n","import type { PickByType } from \"@sigureya/rpgtypes\";\r\n\r\nexport const pickPropertys = <\r\n  Result,\r\n  Value,\r\n  T extends Record<KeyType, Value> = Record<string, Value>,\r\n  KeyType extends string & keyof PickByType<T, Value> = string &\r\n    keyof PickByType<T, Value>\r\n>(\r\n  data: T,\r\n  keyList: ReadonlyArray<string & keyof PickByType<T, Value>>,\r\n  fn: (key: string, value: Value, data: T) => Result\r\n): Result[] => {\r\n  return keyList.map((key) => fn(key, data[key], data));\r\n};\r\n\r\nexport const pickString = <\r\n  Result,\r\n  T extends Record<KeyType, string> = Record<string, string>,\r\n  KeyType extends string & keyof PickByType<T, string> = string &\r\n    keyof PickByType<T, string>\r\n>(\r\n  data: T,\r\n  keyList: ReadonlyArray<KeyType>,\r\n  fn: (key: string, value: string, data: T) => Result\r\n): Result[] => {\r\n  return pickPropertys<Result, string, T>(data, keyList, fn);\r\n};\r\n"],"names":["constructParamArray","constructActor","proto","constructEnemy","constructArmor","constructWeapon","constructDamage","constructClass","constructItem","constructSkill","constructState","createMap","createMapEvent","arg","createEventPage","createCondtion","createMapEventImage","createAudio","createSystemData","system","createTerms","createAdvanced","createSystemSoundsArray","createVehicle","createMessages","createCommandsArray","createParamNamesArray","createBasicTerms","names","MessageProxy","command","index","array","sepadrator","v","result","i","mapTextCommand","list","table","SHOW_MESSAGE","SHOW_CHOICES","SHOW_CHOICES_ITEM","SHOW_SCROLLING_TEXT","CHANGE_NAME","CHANGE_PROFILE","CHANGE_NICKNAME","COMMENT_BODY","createNoteEntity","key","value","makeRegex","readNote","note","options","opt","regex","match","replaceNote","transformFunction","_subString","newText","getNoteValue","targetKey","setNoteValue","newValue","codeInfoText","code","ACTOR","VARIABLE","createControlCharFormat","char","id","fromActor","actor","fromActors","actors","fromSystem","name","pair","defaultSet","getControlChars","text","validChars","controlChars","pickPropertys","data","keyList","fn","pickString"],"mappings":"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"}