{"version":3,"file":"rpg-data-tools.umd.js","sources":["../src/constructData/mainData.ts","../src/constructData/map.ts","../src/constructData/audio/createAudio.ts","../src/constructData/systemData.ts","../src/commandMapper/commandProxy/showMessage.ts","../src/commandMapper/message.ts","../src/format/note.ts","../src/format/codeInfoText.ts","../src/format/controlChars/constants.ts","../src/format/controlChars/controlChars.ts","../src/format/controlChars/getContolChars.ts"],"sourcesContent":["import type {\r\n  Data_Actor,\r\n  Data_Enemy,\r\n  Data_Weapon,\r\n  Data_Armor,\r\n  Data_Class,\r\n  Data_Skill,\r\n  Data_Item,\r\n  Data_State,\r\n  ParamArray,\r\n} from \"@sigureya/rpgtypes\";\r\n\r\nexport const constructParamArray = (): ParamArray => {\r\n  return [0, 0, 0, 0, 0, 0, 0, 0];\r\n};\r\n\r\nexport const constructActor = (proto?: Partial<Data_Actor>): Data_Actor => {\r\n  return {\r\n    id: 0,\r\n    name: \"\",\r\n    nickname: \"\",\r\n    profile: \"\",\r\n    note: \"\",\r\n    classId: 0,\r\n    initialLevel: 1,\r\n    maxLevel: 99,\r\n    characterIndex: 0,\r\n    characterName: \"\",\r\n    faceIndex: 0,\r\n    faceName: \"\",\r\n    battlerName: \"\",\r\n    traits: [],\r\n    equips: [],\r\n    ...proto,\r\n  };\r\n};\r\n\r\nexport const constructEnemy = (proto?: Partial<Data_Enemy>): Data_Enemy => {\r\n  return {\r\n    battlerHue: 0,\r\n    id: 0,\r\n    name: \"\",\r\n    note: \"\",\r\n    battlerName: \"\",\r\n    traits: [],\r\n    params: constructParamArray(),\r\n    exp: 0,\r\n    gold: 0,\r\n    dropItems: [],\r\n    actions: [],\r\n\r\n    ...proto,\r\n  };\r\n};\r\n\r\nexport const constructArmor = (proto?: Partial<Data_Armor>): Data_Armor => {\r\n  return {\r\n    price: 0,\r\n    id: 0,\r\n    name: \"\",\r\n    note: \"\",\r\n    iconIndex: 0,\r\n    description: \"\",\r\n    etypeId: 0,\r\n    params: constructParamArray(),\r\n    traits: [],\r\n\r\n    ...proto,\r\n  };\r\n};\r\nexport const constructWeapon = (proto?: Partial<Data_Weapon>): Data_Weapon => {\r\n  return {\r\n    price: 0,\r\n    id: 0,\r\n    name: \"\",\r\n    note: \"\",\r\n    iconIndex: 0,\r\n    description: \"\",\r\n    etypeId: 0,\r\n    wtypeId: 0,\r\n    params: constructParamArray(),\r\n    traits: [],\r\n    damage: constructDamage(),\r\n\r\n    ...proto,\r\n  };\r\n};\r\n\r\nexport const constructClass = (proto?: Partial<Data_Class>): Data_Class => {\r\n  return {\r\n    id: 0,\r\n    name: \"\",\r\n    note: \"\",\r\n    traits: [],\r\n    learnings: [],\r\n    params: constructParamArray(),\r\n    expParams: [],\r\n    ...proto,\r\n  };\r\n};\r\n\r\nexport const constructDamage = (\r\n  proto?: Partial<Data_Skill[\"damage\"]>\r\n): Data_Skill[\"damage\"] => {\r\n  return {\r\n    type: 0,\r\n    elementId: 0,\r\n    formula: \"0\",\r\n    variance: 20,\r\n    critical: false,\r\n    ...proto,\r\n  };\r\n};\r\n\r\nexport const constructItem = (proto?: Partial<Data_Item>): Data_Item => {\r\n  return {\r\n    id: 0,\r\n    name: \"\",\r\n    iconIndex: 0,\r\n    description: \"\",\r\n    note: \"\",\r\n    price: 0,\r\n    consumable: false,\r\n    scope: 0,\r\n    occasion: 0,\r\n    speed: 0,\r\n    successRate: 100,\r\n    repeats: 1,\r\n    tpGain: 0,\r\n    hitType: 0,\r\n    animationId: 0,\r\n    damage: constructDamage(),\r\n    effects: [],\r\n    ...proto,\r\n  };\r\n};\r\n\r\nexport const constructSkill = (proto?: Partial<Data_Skill>): Data_Skill => {\r\n  return {\r\n    animationId: 0,\r\n    damage: constructDamage(),\r\n    description: \"\",\r\n    hitType: 0,\r\n    iconIndex: 0,\r\n    id: 0,\r\n    message1: \"\",\r\n    message2: \"\",\r\n    mpCost: 0,\r\n    name: \"\",\r\n    note: \"\",\r\n    occasion: 0,\r\n    repeats: 1,\r\n    requiredWtypeId1: 0,\r\n    requiredWtypeId2: 0,\r\n    scope: 0,\r\n    speed: 0,\r\n    stypeId: 0,\r\n    successRate: 100,\r\n    tpCost: 0,\r\n    tpGain: 0,\r\n    effects: [],\r\n    messageType: 0,\r\n\r\n    ...proto,\r\n  };\r\n};\r\n\r\nexport const constructState = (proto?: Partial<Data_State>): Data_State => {\r\n  return {\r\n    id: 0,\r\n    name: \"\",\r\n    iconIndex: 0,\r\n    restriction: 0,\r\n    priority: 50,\r\n    motion: 0,\r\n    overlay: 0,\r\n    removeAtBattleEnd: false,\r\n    removeByRestriction: false,\r\n    autoRemovalTiming: 0,\r\n    minTurns: 1,\r\n    maxTurns: 1,\r\n    removeByDamage: false,\r\n    chanceByDamage: 100,\r\n    removeByWalking: false,\r\n    stepsToRemove: 100,\r\n    message1: \"\",\r\n    message2: \"\",\r\n    message3: \"\",\r\n    message4: \"\",\r\n    traits: [],\r\n    note: \"\",\r\n    ...proto,\r\n  };\r\n};\r\n","import type { Data_Map, MapEvent } from \"@sigureya/rpgtypes\";\r\nimport type { MapEventPage } from \"@sigureya/rpgtypes\";\r\n\r\nexport const createMap = (\r\n  proto: {\r\n    bgm: Data_Map[\"bgm\"];\r\n    bgs: Data_Map[\"bgs\"];\r\n  } & Partial<Data_Map>\r\n): Data_Map => ({\r\n  autoplayBgm: true,\r\n  autoplayBgs: false,\r\n  battleback1Name: \"\",\r\n  battleback2Name: \"\",\r\n  data: [],\r\n  disableDashing: false,\r\n  displayName: \"\",\r\n  encounterList: [],\r\n  events: [],\r\n  height: 0,\r\n  note: \"\",\r\n  width: 0,\r\n  x: 0,\r\n  y: 0,\r\n  parallaxName: \"\",\r\n  parallaxLoopX: false,\r\n  parallaxLoopY: false,\r\n  parallaxShow: false,\r\n  parallaxSx: 0,\r\n  parallaxSy: 0,\r\n  ...proto,\r\n});\r\n\r\nexport const createMapEvent = (arg?: Partial<MapEvent>): MapEvent => ({\r\n  id: 0,\r\n  name: \"\",\r\n  note: \"\",\r\n  x: 0,\r\n  y: 0,\r\n  pages: [createEventPage()],\r\n  ...arg,\r\n});\r\n\r\nexport const createCondtion = (\r\n  arg?: Partial<MapEventPage[\"conditions\"]>\r\n): MapEventPage[\"conditions\"] => ({\r\n  actorId: 0,\r\n  actorValid: false,\r\n  itemId: 0,\r\n  itemValid: false,\r\n  selfSwitchCh: \"\",\r\n  selfSwitchValid: false,\r\n  switch1Id: 0,\r\n  switch1Valid: false,\r\n  switch2Id: 0,\r\n  switch2Valid: false,\r\n  variableId: 0,\r\n  variableValid: false,\r\n  variableValue: 0,\r\n  ...arg,\r\n});\r\n\r\nexport const createMapEventImage = (\r\n  arg?: Partial<MapEventPage[\"image\"]>\r\n): MapEventPage[\"image\"] => ({\r\n  characterIndex: 0,\r\n  characterName: \"\",\r\n  direction: 6,\r\n  pattern: 0,\r\n  tileId: 0,\r\n  ...arg,\r\n});\r\n\r\nexport const createEventPage = (arg?: Partial<MapEventPage>): MapEventPage => ({\r\n  conditions: createCondtion(),\r\n  image: createMapEventImage(),\r\n  moveRoute: {\r\n    list: [],\r\n    repeat: false,\r\n    wait: false,\r\n    skippable: false,\r\n  },\r\n  directionFix: false,\r\n  moveFrequency: 0,\r\n  list: [],\r\n  ...arg,\r\n});\r\n","import type { AudioFileParams } from \"@sigureya/rpgtypes\";\r\n\r\nexport const createAudio = (): AudioFileParams => {\r\n  return {\r\n    name: \"\",\r\n    pan: 0,\r\n    pitch: 100,\r\n    volume: 90,\r\n  };\r\n};\r\n","import type {\r\n  Data_System,\r\n  Terms_Messages,\r\n  System_Terms,\r\n  System_Advanced,\r\n  Data_Vehicle,\r\n  Terms_BasicArray,\r\n  Terms_ParamNamesArray,\r\n  Terms_CommandArray,\r\n  System_SoundsArray,\r\n} from \"@sigureya/rpgtypes\";\r\nimport type { SystemSounds } from \"./audio\";\r\nimport { createAudio } from \"./audio\";\r\nimport type { ParamTable } from \"./paramArray\";\r\nimport type { Terms_Commands, BasicTerms } from \"./types\";\r\n\r\nexport const createSystemData = (\r\n  system: Partial<Data_System> = {}\r\n): Data_System => ({\r\n  local: system.local ?? \"\",\r\n  gameTitle: system.gameTitle ?? \"\",\r\n  currencyUnit: system.currencyUnit ?? \"\",\r\n  title1Name: system.title1Name ?? \"\",\r\n  terms: system.terms ?? createTerms(),\r\n  title2Name: system.title2Name ?? \"\",\r\n  optAutosave: system.optAutosave ?? false,\r\n  attackMotions: system.attackMotions ?? [],\r\n  startMapId: system.startMapId ?? 0,\r\n  startX: system.startX ?? 0,\r\n  startY: system.startY ?? 0,\r\n  switches: system.switches ?? [],\r\n  windowTone: system.windowTone ?? [0, 0, 0, 0],\r\n  editMapId: system.editMapId ?? 0,\r\n  testTroopId: system.testTroopId ?? 0,\r\n  testBattlers: system.testBattlers ?? [],\r\n  versionId: system.versionId ?? 0,\r\n  advanced: system.advanced ?? createAdvanced(),\r\n  armorTypes: system.armorTypes ?? [],\r\n  elements: system.elements ?? [],\r\n  variables: system.variables ?? [],\r\n  equipTypes: system.equipTypes ?? [],\r\n  sounds: system.sounds ?? createSystemSoundsArray(),\r\n  titleBgm: system.titleBgm ?? createAudio(),\r\n  gameoverMe: system.gameoverMe ?? createAudio(),\r\n  battleBgm: system.battleBgm ?? createAudio(),\r\n  defeatMe: system.defeatMe ?? createAudio(),\r\n  victoryMe: system.victoryMe ?? createAudio(),\r\n  battleback1Name: system.battleback1Name ?? \"\",\r\n  battleback2Name: system.battleback2Name ?? \"\",\r\n  battlerName: system.battlerName ?? \"\",\r\n  weaponTypes: system.weaponTypes ?? [],\r\n  skillTypes: system.skillTypes ?? [],\r\n  optDisplayTp: system.optDisplayTp ?? false,\r\n  optDrawTitle: system.optDrawTitle ?? false,\r\n  optExtraExp: system.optExtraExp ?? false,\r\n  optFloorDeath: system.optFloorDeath ?? false,\r\n  optFollowers: system.optFollowers ?? false,\r\n  optKeyItemsNumber: system.optKeyItemsNumber ?? false,\r\n  optSideView: system.optSideView ?? false,\r\n  optSlipDeath: system.optSlipDeath ?? false,\r\n  optTransparent: system.optTransparent ?? false,\r\n  boat: system.boat ?? createVehicle(),\r\n  ship: system.ship ?? createVehicle(),\r\n  airship: system.airship ?? createVehicle(),\r\n  tileSize: system.tileSize ?? 0,\r\n});\r\n\r\nexport const createTerms = (\r\n  proto: {\r\n    messages?: Partial<Terms_Messages>;\r\n    commands?: Partial<Terms_Commands>;\r\n    params?: Partial<ParamTable<string>>;\r\n    basic?: Partial<BasicTerms>;\r\n  } = {}\r\n): System_Terms => ({\r\n  messages: createMessages(proto.messages ?? {}),\r\n  commands: createCommandsArray(proto.commands ?? {}),\r\n  params: createParamNamesArray(proto.params ?? {}),\r\n  basic: createBasicTerms(proto.basic ?? {}),\r\n});\r\n\r\nexport const createBasicTerms = (\r\n  proto: Partial<BasicTerms> = {}\r\n): Terms_BasicArray => [\r\n  proto.level ?? \"\",\r\n  proto.levelA ?? \"\",\r\n  proto.hp ?? \"\",\r\n  proto.hpA ?? \"\",\r\n  proto.mp ?? \"\",\r\n  proto.mpA ?? \"\",\r\n  proto.tp ?? \"\",\r\n  proto.tpA ?? \"\",\r\n  proto.experience ?? \"\",\r\n  proto.exp ?? \"\",\r\n];\r\n\r\nexport const createParamNamesArray = (\r\n  names: Partial<ParamTable<string>> = {}\r\n): Terms_ParamNamesArray => [\r\n  names.mhp ?? \"\",\r\n  names.mmp ?? \"\",\r\n  names.atk ?? \"\",\r\n  names.def ?? \"\",\r\n  names.mat ?? \"\",\r\n  names.mdf ?? \"\",\r\n  names.agi ?? \"\",\r\n  names.luk ?? \"\",\r\n  names.hit ?? \"\",\r\n  names.eva ?? \"\",\r\n];\r\n\r\nexport const createCommandsArray = (\r\n  proto: Partial<Terms_Commands> = {}\r\n): Terms_CommandArray => [\r\n  proto.fight ?? \"\",\r\n  proto.escape ?? \"\",\r\n  proto.attack ?? \"\",\r\n  proto.guard ?? \"\",\r\n  proto.item ?? \"\",\r\n  proto.skill ?? \"\",\r\n  proto.equip ?? \"\",\r\n  proto.status ?? \"\",\r\n  proto.formation ?? \"\",\r\n  proto.save ?? \"\",\r\n  proto.gameEnd ?? \"\",\r\n  proto.options ?? \"\",\r\n  proto.weapon ?? \"\",\r\n  proto.armor ?? \"\",\r\n  proto.keyItem ?? \"\",\r\n  proto.equip2 ?? \"\",\r\n  proto.optimize ?? \"\",\r\n  proto.clear ?? \"\",\r\n  proto.newGame ?? \"\",\r\n  proto.continue_ ?? \"\",\r\n  proto.notUsed20 ?? \"\",\r\n  proto.toTitle ?? \"\",\r\n  proto.cancel ?? \"\",\r\n  proto.notUsed23 ?? \"\",\r\n  proto.buy ?? \"\",\r\n  proto.sell ?? \"\",\r\n];\r\n\r\nexport const createMessages = (\r\n  proto: Partial<Terms_Messages> = {}\r\n): Terms_Messages => ({\r\n  alwaysDash: proto.alwaysDash ?? \"\",\r\n  commandRemember: proto.commandRemember ?? \"\",\r\n  touchUI: proto.touchUI ?? \"\",\r\n  bgmVolume: proto.bgmVolume ?? \"\",\r\n  bgsVolume: proto.bgsVolume ?? \"\",\r\n  meVolume: proto.meVolume ?? \"\",\r\n  seVolume: proto.seVolume ?? \"\",\r\n  possession: proto.possession ?? \"\",\r\n  expTotal: proto.expTotal ?? \"\",\r\n  expNext: proto.expNext ?? \"\",\r\n  saveMessage: proto.saveMessage ?? \"\",\r\n  loadMessage: proto.loadMessage ?? \"\",\r\n  file: proto.file ?? \"\",\r\n  autosave: proto.autosave ?? \"\",\r\n  partyName: proto.partyName ?? \"\",\r\n  emerge: proto.emerge ?? \"\",\r\n  preemptive: proto.preemptive ?? \"\",\r\n  surprise: proto.surprise ?? \"\",\r\n  escapeStart: proto.escapeStart ?? \"\",\r\n  escapeFailure: proto.escapeFailure ?? \"\",\r\n  victory: proto.victory ?? \"\",\r\n  defeat: proto.defeat ?? \"\",\r\n  obtainExp: proto.obtainExp ?? \"\",\r\n  obtainGold: proto.obtainGold ?? \"\",\r\n  obtainItem: proto.obtainItem ?? \"\",\r\n  levelUp: proto.levelUp ?? \"\",\r\n  obtainSkill: proto.obtainSkill ?? \"\",\r\n  useItem: proto.useItem ?? \"\",\r\n  criticalToEnemy: proto.criticalToEnemy ?? \"\",\r\n  criticalToActor: proto.criticalToActor ?? \"\",\r\n  actorDamage: proto.actorDamage ?? \"\",\r\n  actorRecovery: proto.actorRecovery ?? \"\",\r\n  actorGain: proto.actorGain ?? \"\",\r\n  actorLoss: proto.actorLoss ?? \"\",\r\n  actorDrain: proto.actorDrain ?? \"\",\r\n  actorNoDamage: proto.actorNoDamage ?? \"\",\r\n  actorNoHit: proto.actorNoHit ?? \"\",\r\n  enemyDamage: proto.enemyDamage ?? \"\",\r\n  enemyRecovery: proto.enemyRecovery ?? \"\",\r\n  enemyGain: proto.enemyGain ?? \"\",\r\n  enemyLoss: proto.enemyLoss ?? \"\",\r\n  enemyDrain: proto.enemyDrain ?? \"\",\r\n  enemyNoDamage: proto.enemyNoDamage ?? \"\",\r\n  enemyNoHit: proto.enemyNoHit ?? \"\",\r\n  evasion: proto.evasion ?? \"\",\r\n  magicEvasion: proto.magicEvasion ?? \"\",\r\n  magicReflection: proto.magicReflection ?? \"\",\r\n  counterAttack: proto.counterAttack ?? \"\",\r\n  substitute: proto.substitute ?? \"\",\r\n  buffAdd: proto.buffAdd ?? \"\",\r\n  debuffAdd: proto.debuffAdd ?? \"\",\r\n  buffRemove: proto.buffRemove ?? \"\",\r\n  actionFailure: proto.actionFailure ?? \"\",\r\n});\r\nexport const createAdvanced = (\r\n  proto: Partial<System_Advanced> = {}\r\n): System_Advanced => ({\r\n  gameId: proto.gameId ?? 0,\r\n  screenWidth: proto.screenWidth ?? 0,\r\n  screenHeight: proto.screenHeight ?? 0,\r\n  uiAreaWidth: proto.uiAreaWidth ?? 0,\r\n  uiAreaHeight: proto.uiAreaHeight ?? 0,\r\n  windowOpacity: proto.windowOpacity ?? 0,\r\n  screenScale: proto.screenScale ?? 0,\r\n  numberFontFilename: proto.numberFontFilename ?? \"\",\r\n  mainFontFilename: proto.mainFontFilename ?? \"\",\r\n  fallbackFonts: proto.fallbackFonts ?? \"\",\r\n  fontSize: proto.fontSize ?? 0,\r\n});\r\n\r\nexport const createVehicle = (\r\n  proto: Partial<Data_Vehicle> = {}\r\n): Data_Vehicle => ({\r\n  bgm: proto.bgm ?? createAudio(),\r\n  characterIndex: proto.characterIndex ?? 0,\r\n  characterName: proto.characterName ?? \"\",\r\n  startMapId: proto.startMapId ?? 0,\r\n  startX: proto.startX ?? 0,\r\n  startY: proto.startY ?? 0,\r\n});\r\n\r\nexport const createSystemSoundsArray = (\r\n  proto: Partial<SystemSounds> = {}\r\n): System_SoundsArray => [\r\n  proto.cursor ?? createAudio(),\r\n  proto.ok ?? createAudio(),\r\n  proto.cancel ?? createAudio(),\r\n  proto.buzzer ?? createAudio(),\r\n  proto.equip ?? createAudio(),\r\n  proto.save ?? createAudio(),\r\n  proto.load ?? createAudio(),\r\n  proto.battleStart ?? createAudio(),\r\n  proto.escape ?? createAudio(),\r\n  proto.enemyAttack ?? createAudio(),\r\n  proto.enemyDamage ?? createAudio(),\r\n  proto.enemyCollapse ?? createAudio(),\r\n  proto.bossCollapse1 ?? createAudio(),\r\n  proto.bossCollapse2 ?? createAudio(),\r\n  proto.actorDamage ?? createAudio(),\r\n  proto.actorCollapse ?? createAudio(),\r\n  proto.playRecovery ?? createAudio(),\r\n  proto.playMiss ?? createAudio(),\r\n  proto.playEvasion ?? createAudio(),\r\n  proto.playMagicEvasion ?? createAudio(),\r\n  proto.playReflection ?? createAudio(),\r\n  proto.shop ?? createAudio(),\r\n  proto.useItem ?? createAudio(),\r\n  proto.useSkill ?? createAudio(),\r\n];\r\n","import type { EventCommand, EventCommandTable } from \"@sigureya/rpgtypes\";\r\n\r\nexport class MessageProxy {\r\n  constructor(\r\n    public readonly command: Readonly<EventCommandTable[\"SHOW_MESSAGE\"]>,\r\n    private index: number,\r\n    private array: ReadonlyArray<EventCommand>\r\n  ) {}\r\n  joinBody(sepadrator = \"\\n\"): string {\r\n    return this.body()\r\n      .map((v) => v.parameters[0])\r\n      .join(sepadrator);\r\n  }\r\n  body(): EventCommandTable[\"SHOW_MESSAGE_BODY\"][] {\r\n    const result: EventCommandTable[\"SHOW_MESSAGE_BODY\"][] = [];\r\n    for (let i = this.index + 1; i < this.array.length; i++) {\r\n      const command = this.array[i];\r\n      if (command.code === 401) {\r\n        result.push(command);\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  head(): EventCommandTable[\"SHOW_MESSAGE\"] {\r\n    return this.command;\r\n  }\r\n  speakerName(): string {\r\n    return this.command.parameters[4];\r\n  }\r\n}\r\n","import {\r\n  CHANGE_NAME,\r\n  CHANGE_NICKNAME,\r\n  CHANGE_PROFILE,\r\n  COMMENT_BODY,\r\n  SHOW_CHOICES,\r\n  SHOW_CHOICES_ITEM,\r\n  SHOW_MESSAGE,\r\n  SHOW_SCROLLING_TEXT,\r\n} from \"@sigureya/rpgtypes\";\r\nimport type { EventCommand, EventCommandTable } from \"@sigureya/rpgtypes\";\r\nimport { MessageProxy } from \"./commandProxy\";\r\n\r\ntype CallBackFunc<Command extends EventCommand, Reulst = void> = (\r\n  command: Readonly<Command>,\r\n  index: number,\r\n  list: ReadonlyArray<Readonly<EventCommand>>\r\n) => Reulst;\r\n\r\n// interface\r\ninterface Mapper<T> {\r\n  showMessage(proxy: MessageProxy): T;\r\n  showChoices: CallBackFunc<EventCommandTable[\"SHOW_CHOICES\"], T>;\r\n  showChoicesItem: CallBackFunc<EventCommandTable[\"SHOW_CHOICES_ITEM\"], T>;\r\n  showscrollingText: CallBackFunc<EventCommandTable[\"SHOW_SCROLLING_TEXT\"], T>;\r\n  changeName: CallBackFunc<EventCommandTable[\"CHANGE_NAME\"], T>;\r\n  changeProfile: CallBackFunc<EventCommandTable[\"CHANGE_PROFILE\"], T>;\r\n  changeNickname: CallBackFunc<EventCommandTable[\"CHANGE_NICKNAME\"], T>;\r\n  commentBody: CallBackFunc<EventCommandTable[\"COMMENT_BODY\"], T>;\r\n  other: CallBackFunc<EventCommand, T>;\r\n}\r\n\r\nexport const mapTextCommand = <T>(\r\n  list: ReadonlyArray<EventCommand>,\r\n  table: Mapper<T>\r\n) => {\r\n  return list.map<T>((command, index, array) => {\r\n    switch (command.code) {\r\n      case SHOW_MESSAGE:\r\n        return table.showMessage(new MessageProxy(command, index, array));\r\n      case SHOW_CHOICES:\r\n        return table.showChoices(command, index, array);\r\n      case SHOW_CHOICES_ITEM:\r\n        return table.showChoicesItem(command, index, array);\r\n      case SHOW_SCROLLING_TEXT:\r\n        return table.showscrollingText(command, index, array);\r\n      case CHANGE_NAME:\r\n        return table.changeName(command, index, array);\r\n      case CHANGE_PROFILE:\r\n        return table.changeProfile(command, index, array);\r\n      case CHANGE_NICKNAME:\r\n        return table.changeNickname(command, index, array);\r\n      case COMMENT_BODY:\r\n        return table.commentBody(command, index, array);\r\n\r\n      default:\r\n        return table.other(command, index, array);\r\n    }\r\n  });\r\n};\r\n","export const createNoteEntity = (key: string, value: string): string => {\r\n  return `<${key}:${value}>`;\r\n};\r\n\r\nexport const makeRegex = () => /<([^<>:]+):([^>]*)>/g;\r\n\r\n/**\r\n * note文字列を解析し、キーと値のペアを取得します。\r\n * タグが閉じられていない場合、その要素は無視されます。\r\n */\r\nexport const readNote = (note: string): [string, string][] => {\r\n  const regex = makeRegex();\r\n  const result: [string, string][] = [];\r\n  let match: RegExpExecArray | null;\r\n\r\n  while ((match = regex.exec(note)) !== null) {\r\n    result.push([match[1], match[2]]);\r\n  }\r\n  return result;\r\n};\r\n\r\n// 修正2: 引数名変更 dictionary → transformFunction\r\nexport const replaceNote = (\r\n  note: string,\r\n  transformFunction: (key: string, value: string) => string\r\n): string => {\r\n  return note.replace(makeRegex(), (_subString, key: string, value: string) => {\r\n    const newText = transformFunction(key, value);\r\n    return createNoteEntity(key, newText);\r\n  });\r\n};\r\n\r\n// 修正4: 特定のキーに対応するデータを取得する関数\r\nexport const getNoteValue = (\r\n  note: string,\r\n  targetKey: string\r\n): string | undefined => {\r\n  const regex = makeRegex();\r\n  let match: RegExpExecArray | null;\r\n\r\n  while ((match = regex.exec(note)) !== null) {\r\n    if (match[1] === targetKey) {\r\n      return match[2]; // 対応する値を返す\r\n    }\r\n  }\r\n  return undefined; // 見つからなかった場合\r\n};\r\n\r\n// 修正4: 特定のキーに対応する値を差し替える関数\r\nexport const setNoteValue = (\r\n  note: string,\r\n  targetKey: string,\r\n  newValue: string\r\n): string => {\r\n  const regex = makeRegex();\r\n\r\n  return note.replace(regex, (match, key: string, value: string) => {\r\n    if (key === targetKey) {\r\n      return createNoteEntity(key, newValue); // 対象キーの場合のみ値を差し替え\r\n    }\r\n    return match; // 対象外はそのまま\r\n  });\r\n};\r\n","import type { EventCode } from \"@sigureya/rpgtypes\";\r\n\r\nexport const codeInfoText = (code: EventCode) => {\r\n  return `code:${code}`;\r\n};\r\n","export const ACTOR = \"N\" as const;\r\nexport const VARIABLE = \"V\" as const;\r\n","import type { Data_Actor, Data_System } from \"@sigureya/rpgtypes\";\r\nimport { ACTOR, VARIABLE } from \"./constants\";\r\nimport type { ControlCharInfo, ControlChars } from \"./types\";\r\n\r\nexport const createControlCharFormat = <C extends ControlChars>(\r\n  char: C,\r\n  id: number\r\n) => {\r\n  return `\\\\${char}[${id}]` as const;\r\n};\r\n\r\nexport const fromActor = (actor: Data_Actor) => {\r\n  return createControlCharFormat(ACTOR, actor.id);\r\n};\r\n\r\nexport const fromActors = (\r\n  actors: ReadonlyArray<Data_Actor>\r\n): ControlCharInfo[] => {\r\n  return actors.map<ControlCharInfo>((actor) => ({\r\n    controlChar: fromActor(actor),\r\n    text: actor.name,\r\n  }));\r\n};\r\nexport const fromSystem = (system: Data_System): ControlCharInfo[] => {\r\n  return system.variables\r\n    .map<ControlCharInfo>((name, index) => ({\r\n      text: name || \"\",\r\n      controlChar: createControlCharFormat(VARIABLE, index),\r\n    }))\r\n    .filter((pair) => pair.text !== \"\");\r\n};\r\n","export interface ControlChar {\r\n  char: string; // 制御文字\r\n  id: number; // 数字部分\r\n}\r\n\r\nconst defaultSet: ReadonlySet<Lowercase<string>> = new Set([\r\n  \"px\",\r\n  \"py\",\r\n  \"x\",\r\n  \"y\",\r\n  \"v\",\r\n  \"n\",\r\n  \"p\",\r\n  \"g\",\r\n  \"c\",\r\n  \"i\",\r\n  \"fs\",\r\n]);\r\n\r\n/**\r\n * 指定されたテキストから制御文字を抽出し、ControlChar配列として返します。\r\n * 制御文字の形式: \\(文字)[数字]\r\n * 文字の大文字小文字を区別しない。\r\n */\r\nexport const getControlChars = (\r\n  text: string,\r\n  validChars: ReadonlySet<Lowercase<string>> = defaultSet\r\n): ControlChar[] => {\r\n  // 正規表現: \\(制御文字)[数字]\r\n  const regex = /\\\\([A-Za-z]+)\\[(\\d+)]/g;\r\n\r\n  const controlChars: ControlChar[] = [];\r\n  let match: RegExpExecArray | null;\r\n\r\n  while ((match = regex.exec(text)) !== null) {\r\n    const char = match[1].toLowerCase() as Lowercase<string>;\r\n    const id = parseInt(match[2], 10);\r\n\r\n    if (validChars.has(char)) {\r\n      controlChars.push({ char: match[1], id }); // 大文字小文字区別しないが元の文字を保持\r\n    }\r\n  }\r\n\r\n  return controlChars;\r\n};\r\n"],"names":["constructParamArray","constructActor","proto","constructEnemy","constructArmor","constructWeapon","constructDamage","constructClass","constructItem","constructSkill","constructState","createMap","createMapEvent","arg","createEventPage","createCondtion","createMapEventImage","createAudio","createSystemData","system","createTerms","createAdvanced","createSystemSoundsArray","createVehicle","createMessages","createCommandsArray","createParamNamesArray","createBasicTerms","names","MessageProxy","command","index","array","sepadrator","v","result","i","mapTextCommand","list","table","SHOW_MESSAGE","SHOW_CHOICES","SHOW_CHOICES_ITEM","SHOW_SCROLLING_TEXT","CHANGE_NAME","CHANGE_PROFILE","CHANGE_NICKNAME","COMMENT_BODY","createNoteEntity","key","value","makeRegex","readNote","note","regex","match","replaceNote","transformFunction","_subString","newText","getNoteValue","targetKey","setNoteValue","newValue","codeInfoText","code","ACTOR","VARIABLE","createControlCharFormat","char","id","fromActor","actor","fromActors","actors","fromSystem","name","pair","defaultSet","getControlChars","text","validChars","controlChars"],"mappings":"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"}